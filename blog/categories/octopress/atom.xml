<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | xixitalk's snippet]]></title>
  <link href="http://xixitalk.github.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://xixitalk.github.com/"/>
  <updated>2013-07-06T06:00:10+00:00</updated>
  <id>http://xixitalk.github.com/</id>
  <author>
    <name><![CDATA[xixitalk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[octopress加快rake generate速度]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/Octopress-Rake-gen_deploy/"/>
    <updated>2013-06-19T21:35:54+00:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/Octopress-Rake-gen_deploy</id>
    <content type="html"><![CDATA[<p>octopress随着文件越来越多，<code>rake generate</code>越来越慢。这样可以加快速度。</p>

<!--more-->

<p><code>
rake isolate[new post filename]
rake preview
rake integrate
rake gen_deploy
</code></p>

<p><code>rake isolate</code>进行隔离，<code>rake integrate</code>进行隔离还原，<code>rake gen_deploy</code>进行生成和发布。</p>

<p>不过这个加快只是能够节省preview的时间而已，早点让你看到新博客的预览页面,并没有节省<code>rake generate &amp;&amp; rake deploy</code>一起的时间。</p>

<p>参考：</p>

<ol>
  <li>Some Octopress Rake Tips <a href="http://robdodson.me/blog/2012/06/11/some-octopress-rake-tips/">http://robdodson.me/blog/2012/06/11/some-octopress-rake-tips/</a></li>
  <li>縮短重新產生文章的時間 <a href="http://blog.eddie.com.tw/2011/10/30/speed-up-octopress-post-regeneration/">http://blog.eddie.com.tw/2011/10/30/speed-up-octopress-post-regeneration/</a></li>
  <li>加快generate的速度 <a href="http://blog.kent-chiu.com/blog/2013/03/04/octopress-configuration/">http://blog.kent-chiu.com/blog/2013/03/04/octopress-configuration/</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从已经存在的octopress新建环境]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/clone-from-exist-octopress/"/>
    <updated>2013-06-19T18:45:41+00:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/clone-from-exist-octopress</id>
    <content type="html"><![CDATA[<p>场景需求：为已经存在的octopress博客在另一个目录或者主机新建一个octopress发布环境</p>

<h3 id="sourcemaster">获得source和master分支代码</h3>

<p><code>
$ git clone -b source git@github.com:xixitalk/xixitalk.github.com.git octopress
$ cd octopress
$ git clone git@github.com:xixitalk/xixitalk.github.com.git _deploy 
</code>
<!--more--></p>

<p>如果更改了Gemfile内容，用<code>bundle install</code>更新安装</p>

<p><code>
bundle install
</code></p>

<p>参考：</p>

<p>Clone Your Octopress to Blog From Two Places <a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress里插入flickr的图片]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/Insert-a-Image-From-Flickr-in-Octopress/"/>
    <updated>2013-06-19T10:17:24+00:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/Insert-a-Image-From-Flickr-in-Octopress</id>
    <content type="html"><![CDATA[<p><a href="http://www.flickr.com">flickr</a>更新之后，免费1T空间，同时可以上传质量很好的图片。<a href="http://www.instagram.com">instagram</a>的图片质量太差了。</p>

<!--more-->

<h3 id="gemfileflickraw">Gemfile添加flickraw</h3>

<p><code>
gem 'flickraw', '~&gt; 0.9.6'
</code></p>

<p>执行一次<code>bundle install</code>，确保系统里安装<code>flickraw</code></p>

<h3 id="flickrapikey">申请flickr的API的key</h3>

<p>从flickr.com申请api_key和shared_secret，略过。</p>

<h3 id="flickrimagerbplugins">添加flickr_image.rb到plugins目录</h3>

<p>示例代码</p>

<script src="https://gist.github.com/3156265.js?file=flickr_image.rb"></script>

<p>ENV[“FLICKR_KEY”]和ENV[“FLICKR_SECRET”]可以直接替换成从flickr.com申请的api_key和shared_secret字符串，避免使用环境变量。</p>

<h3 id="flickrimagerb">flickr_image.rb添加代理</h3>

<p>国内不能直接访问<code>flickr.com</code>，<code>rake generate</code>生成时执行<code>flickr_image.rb</code>会出错，所以需要设置一个代理解决。假设代理为一个HTTP代理，修改文件<code>plugins/flickr_image.rb</code>,在<code>FlickRaw.api_key</code>和<code>FlickRaw.shared_secret</code>代码行下添加如下代理。其他代理类似。</p>

<p><code>
FlickRaw.proxy = "http://192.168.1.106:8118/"
</code></p>

<h3 id="section">实例测试</h3>

<p>代码里这样使用
<script src="https://gist.github.com/3156265.js?file=2012-07-21-post-with-images-from-flickr.markdown_"></script></p>

<p><code>b</code>是指big，图片大小约为1024x768，基本可以满足博客显示。如果要更小图片，可以用<code>m</code>,表示medium。再小的用<code>sq</code>,表示square thumbnail。</p>

<p><a href='http://www.flickr.com/photos/xixitalk/6293807068/'><img src='http://farm7.static.flickr.com/6216/6293807068_038b43f12d_b.jpg' title=''/></a></p>

<h3 id="section-1">参考</h3>

<ol>
  <li>Insert a Image From Flickr in Octopress <a href="http://blog.ychuang.org/blog/2012/11/14/insert-a-image-from-flickr-in-octopress/">http://blog.ychuang.org/blog/2012/11/14/insert-a-image-from-flickr-in-octopress/</a></li>
  <li>Fetch images from Flickr to show in Octopress/Jekyll <a href="http://blog.pixarea.com/2012/07/fetch-images-from-flickr-to-show-in-octopress-slash-jekyll">http://blog.pixarea.com/2012/07/fetch-images-from-flickr-to-show-in-octopress-slash-jekyll</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用mathjax显示数学公式]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/08/mathjax-math-formula/"/>
    <updated>2013-06-08T23:32:24+00:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/08/mathjax-math-formula</id>
    <content type="html"><![CDATA[<p>具体可以参看这篇博客<a href="http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/">http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/</a></p>

<p>几点特殊说明如下：<br />
1、 <code>rdiscount</code> 要换成 <code>kramdown</code>，原因<code>rdiscount</code>会将公式的特殊字符转换成HTML的关键词sup、sub等。<br />
2、 MathJax放在<code>source\_includes\custom\head.html</code>更合适，可以精简为下面,原因是kramdown不认inline单个$  </p>

<!--more-->

<p>```
<!-- mathjax config similar to math.stackexchange -->  </p>

<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML" type="text/javascript"></script>

<p>```</p>

<p>3、 要按照博客的说明，解决公式右键点击白屏的问题<br />
4、 用头尾双$进行函数书写，公式上下都空格是单独居中，公式在行内没有空格则是inline</p>

<p>如，单独居中的欧拉公式</p>

<p><code>
$$  \mathrm{e}^{- \mathrm{i} \pi} + 1 = 0 $$
</code></p>

<script type="math/tex; mode=display">  \mathrm{e}^{- \mathrm{i} \pi} + 1 = 0 </script>

<p>行内的欧拉公式<script type="math/tex">  \mathrm{e}^{- \mathrm{i} \pi} + 1 = 0 </script>显示</p>

<p>一元二次方式求根公式</p>

<script type="math/tex; mode=display"> x_{1,2} = \frac{-b \pm \sqrt{b^2-4ac}}{2b} </script>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用浏览器发布博客到octopress]]></title>
    <link href="http://xixitalk.github.com/blog/2013/05/31/octopress-post-from-raspberrypi/"/>
    <updated>2013-05-31T19:57:25+00:00</updated>
    <id>http://xixitalk.github.com/blog/2013/05/31/octopress-post-from-raspberrypi</id>
    <content type="html"><![CDATA[<h3 id="section">目标</h3>
<p>用网页发布到octopress，这样手机、iPad、办公环境都可以通过浏览器发octopress博文了。</p>

<h3 id="section-1">设想</h3>
<p>浏览器网页编写，保存在GAE上，raspberry pi上用shell定时检查抓取，下载到octopress的_posts目录下，调用<code>rake</code>进行发布，调用<code>git push</code>上传markdown源文件到github。</p>

<!--more-->

<h3 id="section-2">硬件环境</h3>
<p>需要一个全天运行的电脑（我的是树莓派），用于每10分钟进行检查是否服务器(GAE)上新的博文，并rake生成html格式的博文上传到github。</p>

<h3 id="section-3">软件环境</h3>
<p>树莓派上安装octopress所需的所有工具，生成一个不要密码的SSH密钥，把公钥上传到github上，这样<code>rake deploy</code>就不会提示输入密码了。</p>

<h3 id="gae">GAE网页设计</h3>

<h4 id="shell">面向shell的接口</h4>
<p><code>/md/getnewpost?action=flag</code>  用于判断GAE上是否有新博文，1表示有新博文，0表示没有新博文 <br />
<code>/md/getnewpost?action=cleanflag</code> 将GAE上博文标志1变成0，用于<code>rake deploy</code>成功后使用  </p>

<p><code>/md/getnewpost?action=getfilename</code> 获得新博文的文件名<br />
<code>/md/getnewpost?action=getfilemd5</code> 获得新博文的md5，用于检验下载的完整性<br />
<code>/md/getnewpost?action=getfilecontent</code> 获得新博文的内容  </p>

<h4 id="section-4">面向用户的接口</h4>
<p><code>/md/getnewpost?action=new</code> 用户要新建博文，浏览器访问该地址<br />
<code>/md/getnewpost?action=edit</code> 用户要重新编辑博文，浏览器访问该地址  </p>

<h4 id="section-5">用户不需要关心的接口</h4>
<p><code>/md/getnewpost?action=save</code> edit之后保存按钮执行本接口<br />
<code>/md/getnewpost?action=publish</code> save后publish按钮执行本接口，将博文标志变成1  </p>

<h3 id="shell-1">shell检查</h3>

<ol>
  <li>先用<code>action=flag</code>获得博文标志。如果是0，GAE上无新博文，直接退出；如果是1，继续。  </li>
  <li>获得新博文的文件名、md5、文件内容，用本地命令md5sum计算新博文的md5，与<code>action=getfilemd5</code>获得的md5进行比较。如果不一致，抓取博文出错退出；如果一致，抓取博文正确。</li>
  <li>将新博文拷贝到octopress到source/_posts目录下，调用<code>rake generate &amp;&amp; rake deploy</code>进行HTML博文生成和发布，调用<code>git push</code>将markdown博文上传到github服务器。</li>
  <li>调用<code>action=cleanflag</code>将GAE博文标志变成0，表示GAE上新博文已经成功发布。</li>
</ol>

<p>可能是<code>rake generate</code>和<code>rake deploy</code>时间比较长，cron 10分钟检查不好使，发现没有效果，最后用后台shell <code>while</code> 循环检查，执行一次后 <code>sleep</code> 600秒这样才正常。</p>

<p>updated from my iPad with Safari</p>
]]></content>
  </entry>
  
</feed>
