<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | xixitalk's snippet]]></title>
  <link href="http://xixitalk.github.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://xixitalk.github.com/"/>
  <updated>2013-06-19T20:54:09+08:00</updated>
  <id>http://xixitalk.github.com/</id>
  <author>
    <name><![CDATA[xixitalk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[从已经存在的octopress新建环境]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/20/clone-from-exist-octopress/"/>
    <updated>2013-06-20T02:45:41+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/20/clone-from-exist-octopress</id>
    <content type="html"><![CDATA[<p>场景需求：为已经存在的octopress博客在另一个目录或者主机新建一个octopress发布环境</p>

<h3 id="sourcemaster">获得source和master分支代码</h3>

<p><code>
$ git clone -b source git@github.com:xixitalk/xixitalk.github.com.git octopress
$ cd octopress
$ git clone git@github.com:xixitalk/xixitalk.github.com.git _deploy 
</code>
<!--more--></p>

<p>如果更改了Gemfile内容，用<code>bundle install</code>更新安装</p>

<p><code>
bundle install
</code></p>

<p>参考：</p>

<p>Clone Your Octopress to Blog From Two Places <a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在octopress里插入flickr的图片]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/Insert-a-Image-From-Flickr-in-Octopress/"/>
    <updated>2013-06-19T18:17:24+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/Insert-a-Image-From-Flickr-in-Octopress</id>
    <content type="html"><![CDATA[<p>flickr更新之后，免费空间大，同时可以上传质量很好的图片，instrgram图片质量太差。</p>

<p>参考这篇Insert a Image From Flickr in Octopress <a href="http://blog.ychuang.org/blog/2012/11/14/insert-a-image-from-flickr-in-octopress/">http://blog.ychuang.org/blog/2012/11/14/insert-a-image-from-flickr-in-octopress/</a></p>

<p>Fetch images from Flickr to show in Octopress/Jekyll <a href="http://blog.pixarea.com/2012/07/fetch-images-from-flickr-to-show-in-octopress-slash-jekyll">http://blog.pixarea.com/2012/07/fetch-images-from-flickr-to-show-in-octopress-slash-jekyll</a></p>

<!--more-->

<p>国内不能直接访问<code>flickr.com</code>，需要设置代理，假设设置一个HTTP代理，修改文件<code>plugins/flickr_image.rb</code>,在<code>FlickRaw.api_key</code>和<code>FlickRaw.shared_secret</code>代码行下添加如下代理。</p>

<p><code>
FlickRaw.proxy = "http://192.168.1.106:8118/"
</code></p>

<p>实例测试：</p>

<p><a href='http://www.flickr.com/photos/xixitalk/6293807068/'><img src='http://farm7.static.flickr.com/6216/6293807068_038b43f12d_b.jpg' title=''/></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用mathjax显示数学公式]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/09/mathjax-math-formula/"/>
    <updated>2013-06-09T07:32:24+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/09/mathjax-math-formula</id>
    <content type="html"><![CDATA[<p>具体可以参看这篇博客<a href="http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/">http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/</a></p>

<p>几点特殊说明如下：<br />
1、 <code>rdiscount</code> 要换成 <code>kramdown</code>，原因<code>rdiscount</code>会将公式的特殊字符转换成HTML的关键词sup、sub等。<br />
2、 MathJax放在<code>source\_includes\custom\head.html</code>更合适，可以精简为下面,原因是kramdown不认inline单个$  </p>

<!--more-->

<p>```
<!-- mathjax config similar to math.stackexchange -->  </p>

<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML" type="text/javascript"></script>

<p>```</p>

<p>3、 要按照博客的说明，解决公式右键点击白屏的问题<br />
4、 用头尾双$进行函数书写，公式上下都空格是单独居中，公式在行内没有空格则是inline</p>

<p>如，单独居中的欧拉公式</p>

<p><code>
$$  \mathrm{e}^{- \mathrm{i} \pi} + 1 = 0 $$
</code></p>

<script type="math/tex; mode=display">  \mathrm{e}^{- \mathrm{i} \pi} + 1 = 0 </script>

<p>行内的欧拉公式<script type="math/tex">  \mathrm{e}^{- \mathrm{i} \pi} + 1 = 0 </script>显示</p>

<p>一元二次方式求根公式</p>

<script type="math/tex; mode=display"> x_{1,2} = \frac{-b \pm \sqrt{b^2-4ac}}{2b} </script>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用浏览器发布博客到octopress]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/01/octopress-post-from-raspberrypi/"/>
    <updated>2013-06-01T03:57:25+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/01/octopress-post-from-raspberrypi</id>
    <content type="html"><![CDATA[<h3 id="section">目标</h3>
<p>用网页发布到octopress，这样手机、iPad、办公环境都可以通过浏览器发octopress博文了。</p>

<h3 id="section-1">设想</h3>
<p>浏览器网页编写，保存在GAE上，raspberry pi上用shell定时检查抓取，下载到octopress的_posts目录下，调用<code>rake</code>进行发布，调用<code>git push</code>上传markdown源文件到github。</p>

<!--more-->

<h3 id="section-2">硬件环境</h3>
<p>需要一个全天运行的电脑（我的是树莓派），用于每10分钟进行检查是否服务器(GAE)上新的博文，并rake生成html格式的博文上传到github。</p>

<h3 id="section-3">软件环境</h3>
<p>树莓派上安装octopress所需的所有工具，生成一个不要密码的SSH密钥，把公钥上传到github上，这样<code>rake deploy</code>就不会提示输入密码了。</p>

<h3 id="gae">GAE网页设计</h3>

<h4 id="shell">面向shell的接口</h4>
<p><code>/md/getnewpost?action=flag</code>  用于判断GAE上是否有新博文，1表示有新博文，0表示没有新博文 <br />
<code>/md/getnewpost?action=cleanflag</code> 将GAE上博文标志1变成0，用于<code>rake deploy</code>成功后使用  </p>

<p><code>/md/getnewpost?action=getfilename</code> 获得新博文的文件名<br />
<code>/md/getnewpost?action=getfilemd5</code> 获得新博文的md5，用于检验下载的完整性<br />
<code>/md/getnewpost?action=getfilecontent</code> 获得新博文的内容  </p>

<h4 id="section-4">面向用户的接口</h4>
<p><code>/md/getnewpost?action=new</code> 用户要新建博文，浏览器访问该地址<br />
<code>/md/getnewpost?action=edit</code> 用户要重新编辑博文，浏览器访问该地址  </p>

<h4 id="section-5">用户不需要关心的接口</h4>
<p><code>/md/getnewpost?action=save</code> edit之后保存按钮执行本接口<br />
<code>/md/getnewpost?action=publish</code> save后publish按钮执行本接口，将博文标志变成1  </p>

<h3 id="shell-1">shell检查</h3>

<ol>
  <li>先用<code>action=flag</code>获得博文标志。如果是0，GAE上无新博文，直接退出；如果是1，继续。  </li>
  <li>获得新博文的文件名、md5、文件内容，用本地命令md5sum计算新博文的md5，与<code>action=getfilemd5</code>获得的md5进行比较。如果不一致，抓取博文出错退出；如果一致，抓取博文正确。</li>
  <li>将新博文拷贝到octopress到source/_posts目录下，调用<code>rake generate &amp;&amp; rake deploy</code>进行HTML博文生成和发布，调用<code>git push</code>将markdown博文上传到github服务器。</li>
  <li>调用<code>action=cleanflag</code>将GAE博文标志变成0，表示GAE上新博文已经成功发布。</li>
</ol>

<p>可能是<code>rake generate</code>和<code>rake deploy</code>时间比较长，cron 10分钟检查不好使，发现没有效果，最后用后台shell <code>while</code> 循环检查，执行一次后 <code>sleep</code> 600秒这样才正常。</p>

<p>updated from my iPad with Safari</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress命令备忘录]]></title>
    <link href="http://xixitalk.github.com/blog/2012/11/23/octopress-command-note/"/>
    <updated>2012-11-23T23:07:00+08:00</updated>
    <id>http://xixitalk.github.com/blog/2012/11/23/octopress-command-note</id>
    <content type="html"><![CDATA[<h2 id="section">创建新文章</h2>

<pre><code>rake new_post["TITLE"]
</code></pre>

<!--more-->

<h2 id="html">生成静态HTML文章</h2>

<pre><code>rake generate
</code></pre>

<h2 id="section-1">本地预览</h2>

<pre><code>rake preview
</code></pre>

<p>通过<a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a>访问</p>

<h2 id="github">发布到github空间</h2>

<pre><code>rake deploy
</code></pre>

<h2 id="markdowngithub">将文章的markdown文件上传到github服务器</h2>

<pre><code>git add .
git commit -m "add source post"
git push origin source
</code></pre>

<h2 id="github-1">从github服务器更新本地仓库</h2>

<pre><code>cd Octopress
cd _deploy
git pull origin master
cd ..
git pull origin source
</code></pre>

<h2 id="octopress">Octopress仓库说明</h2>
<p>Octopress的github分master和source分支，octopress目录下，除_deploy目录外的文件上传到source分支。_deploy目录内容上传到master分支。</p>

<h2 id="octopress-1">Octopress支持中文</h2>
<p>1、rake new_post生成的markdown文件要改成UTF-8无签名格式。</p>

<p>2、在ruby编译器目录里搜索convertible.rb，将28行修改如下：</p>

<pre><code>self.content = File.read(File.join(base, name), :encoding =&gt; "utf-8")
</code></pre>

<h2 id="gist">嵌入gist代码</h2>

<p><code>
&lt;script src="https://gist.github.com/xixitalk/5142241.js"&gt;&lt;/script&gt;
</code></p>

<h2 id="markdown">markdown在线编辑器</h2>
<pre><code>http://mahua.jser.me/
</code></pre>
]]></content>
  </entry>
  
</feed>
