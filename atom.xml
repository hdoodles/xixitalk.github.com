<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[xixitalk's snippet]]></title>
  <link href="http://xixitalk.github.com/atom.xml" rel="self"/>
  <link href="http://xixitalk.github.com/"/>
  <updated>2013-07-04T07:34:46+08:00</updated>
  <id>http://xixitalk.github.com/</id>
  <author>
    <name><![CDATA[xixitalk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[中国社会现状及未来发展]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/04/china-society/"/>
    <updated>2013-07-04T07:10:53+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/04/china-society</id>
    <content type="html"><![CDATA[<p><a href="http://cn.nytimes.com/china/20130625/cc25lifan2/">李凡（下）：中国转型能否避免崩溃一途?</a></p>

<!--more-->

<script src="http://xixitalk.github.com/javascripts/base64.js" type="text/javascript"> </script>
<p><span id="base64_2">TXk0ZzVMaXQ1WnU5NkwyczVaNkw2SU85NVpDbTZZRy81WVdONWJTcDVycUQ1TGlBNllDVVArUzRyZVdidmVheW9lYWNpZVdQamVXdnVlV0ZtdSs4ak9heW9lYWNpZWlvZ09pdXV1aUhxdWVVc2UrOGpPaS9tT2FZcithZWdlYWRnK1M0dStTNWllKzhqT2kvbU9TNGplYVlyK1dvZ2VhZGcrUzR1K1M1aWVPQWd1UzRyZVdidmVXUHF1YWNpZVM0cE9lbmplZTdrK2Flbk8rOG11aTlyT1dlaSthSWtPV0tuK2FJbHVpQWhlVzBxZWE2ZytPQWd1UzRyZVdidmVlYWhPV0h1dWkzcitXUHF1aUR2ZWFZcitXMHFlYTZnKys4ak9la3Z1UzhtdVM0dStTNWllV2J2ZVd1dHVheW9lYWNpZWFJa09XS24rZWFoT1dGaU9TK2krT0FnaUE9</span> <script type="text/javascript"> var line_name = 'base64_2';var content = document.getElementById(line_name).innerHTML;document.getElementById(line_name).innerHTML=Base64.decode(Base64.decode(content));</script></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用base64进行关键词编码]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/03/base64-encode/"/>
    <updated>2013-07-03T06:01:04+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/03/base64-encode</id>
    <content type="html"><![CDATA[<p>用base64对关键词进行两次编码，浏览器客户端用javascript进行两次解码。对于支持javascript的浏览器来说透明，目的是防止关键词过滤。</p>

<!--more-->

<p>如
<script src="http://xixitalk.github.com/javascripts/base64.js" type="text/javascript"> </script> <span id="base64_2">NlppeTU0R3I1YUtaSU9hd2tlUzR1eURvaDZybmxMRWc2WUtUNWJDUDVibXpJT2lEb2VtVXB1YTJteURtc1ovbXM3M21zSkVnNUxtZzZMK1I1Ym16SU9hemxlaTlydVdLbnlEb3BiL29sNDhnNXBhdzU1YUdJQT09</span> <script type="text/javascript"> var line_name = 'base64_2';var content = document.getElementById(line_name).innerHTML;document.getElementById(line_name).innerHTML=Base64.decode(Base64.decode(content));</script></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[达尔文奖]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/27/death-for-sesame/"/>
    <updated>2013-06-27T18:59:21+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/27/death-for-sesame</id>
    <content type="html"><![CDATA[<p>新闻来源<a href="http://news.xinhuanet.com/legal/2013-06/27/c_124918715.htm">http://news.xinhuanet.com/legal/2013-06/27/c_124918715.htm</a></p>

<p>女儿手机掉粪坑，下粪坑捞手机被毒倒，父母赶到也被毒倒。</p>

<!--more-->

<p>无独有偶，<a href="http://csxb.bandao.cn/data/20120917/html/32/content_6.html">北爱尔兰也发生过一条宠物狗掉粪坑，一家四口为救它死了仨</a>，幸存那个人也因吸入大量的粪便和沼气，肺部、食管、呼吸道等器官受损严重。</p>

<p><a href="http://www.darwinawards.com/">达尔文奖</a>奖给那些“让自己愚蠢的基因不再自由地传播出去”，对人类的进化做出了贡献了的人们。维基百科：<a href="https://zh.wikipedia.org/wiki/%E8%BE%BE%E5%B0%94%E6%96%87%E5%A5%96">达尔文奖</a>。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[西奥克兰发生一起自杀溺亡]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/26/West-Auckland-drowning-not-suspicious/"/>
    <updated>2013-06-26T00:57:00+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/26/West-Auckland-drowning-not-suspicious</id>
    <content type="html"><![CDATA[<p>来源:<a href="http://www.3news.co.nz/West-Auckland-drowning-not-suspicious/tabid/423/articleID/302561/Default.aspx">West Auckland drowning not suspicious</a></p>

<p>Police say the death of a man found in a stream bordering the west Auckland suburbs of Henderson and Massey was not suspicious.<br />
据警方资料，在西奥克兰Henderson和Massey边界的河流里发现了一名死亡男子，自杀溺亡可能明显。</p>

<!--more-->

<p>Ranui resident Jimmy Wang Liyu, 78, drowned in the Huruhuru Stream on Friday.<br />
Jimmy Wang Liyu是Ranui居民，78岁，周五在Huruhuru河中溺亡。</p>

<p>Police say local residents were helpful in quickly reporting the incident, which allowed quick recovery of Mr Liyu’s body.<br />
据警察说，他们根据当地居民的及时报告，很快找回了Liyu先生的尸体。</p>

<p>Read More:<a href="http://www.3news.co.nz/Body-found-in-Auckland-stream/tabid/423/articleID/302335/Default.aspx">Body found in Auckland stream</a></p>

<p>Police are asking for help to identify the man<br />
警方正在向公众征求帮助用以识别该男子的身份</p>

<p>The body of a man has been found in a stream which borders the suburbs of Henderson and Massey in west Auckland.<br />
西奥克兰Henderson和Massey边界的河流里发现了一名死亡男子。</p>

<p>Police were called to Huruhuru Stream, Henderson about 4pm today.<br />
今天下午4点警方接到Henderson Huruhuru河流地区的报警。</p>

<p>They are asking for help to identify the man who is described as Asian, approximately 60 years old and of medium build.<br />
该名亚裔男子，60岁左右，中等身材。警方正在为了确认他身份征求公众的帮助。</p>

<p>He was wearing a brown jumper, jeans and white New Balance sports shoes.<br />
他身穿棕色卫衣，牛仔裤和白色New Balance运动鞋。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[树莓派nf_conntrack错误]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/25/nf_conntrack-error/"/>
    <updated>2013-06-25T16:57:52+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/25/nf_conntrack-error</id>
    <content type="html"><![CDATA[<p>最近我的树莓派出现大量的重启，特别是看电影+下bt的时候，并且<a href="http://www.thekelleys.org.uk/dnsmasq/doc.html">Dnsmasq</a>也经常退出，在<code>/var/log/syslog</code>和<code>/var/log/messages</code>出现大量的nf_conntrack错误。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> raspbmc kernel: nf_conntrack: table full, dropping packet
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<p>先试试下面这种方法能不能解决问题，默认<code>nf_conntrack_max</code>是7xxx，树莓派的内存不大，暂时设置<code>20000</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo sysctl -w "net.netfilter.nf_conntrack_max=20000"
</span><span class="line">sudo sysctl -w "net.netfilter.nf_conntrack_tcp_timeout_established=600"
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>参考：</p>

<p><a href="http://www.wendangz.com/idc/linux/967.html">http://www.wendangz.com/idc/linux/967.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[穆斯林禁食猪肉常见问答]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/23/PORK-FORBIDDEN/"/>
    <updated>2013-06-23T15:42:11+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/23/PORK-FORBIDDEN</id>
    <content type="html"><![CDATA[<p>第一个信息来源 <a href="http://www.irf.net/index.php?option=com_content&amp;view=article&amp;id=394%3Apork-forbidden&amp;catid=71%3Amost-common-questions-asked-by-non-muslim&amp;Itemid=199">FAQs Most Common Questions asked by Non Muslims：PORK FORBIDDEN</a></p>

<p>第二个信息来源 <a href="http://www.islamicvoice.com/february.99/zakir.htm">Questions Commonly Asked by Non-Muslims - VI : Why is Pork Forbidden?</a>,和第一个信息地址的内容大部分相同，比第一个信息更正式一些。</p>

<p>说明：下面是穆斯林向非穆斯林说明他们不吃猪肉的几点原因。这里尊重宗教信仰自由，转载此处并无冒犯之意，原因说明本意以英文为准，翻译不准确的地方请留言。作者是<a href="http://www.irf.net/index.php?option=com_content&amp;view=article&amp;id=22&amp;Itemid=54">Dr. Zakir Naik</a>，他是<a href="http://www.irf.net/">Islamic Research Foundation</a>的President。</p>

<p>PORK FORBIDDEN<br />
禁食猪肉</p>

<p>Question:
Why is the eating of pork forbidden in Islam?<br />
问：为什么穆斯林禁止食用猪肉？</p>

<p>Answer:
The fact that consumption of pork is prohibited in Islam is well-known. The following points explain various aspects of this prohibition:<br />
答：大家都知道穆斯林禁食猪肉，下面将阐述这个习惯的几点原因。</p>

<!--more-->

<h3 id="pork-prohibited-in-the-quran">1. Pork prohibited in the Qur’an</h3>

<h3 id="section">1. 《古兰经》里禁食猪肉</h3>
<p>The Qur’an prohibits the consumption of pork in no less than four different places. It is prohibited in 2:173, 5:3, 6:145 and 16:115.</p>

<p>“Forbidden to you (for food) are: dead meat, blood, the flesh of swine, and that on which hath been invoked the name of other than Allah.”</p>

<p>[Al Qur’an 5:3]</p>

<p>The above verses of the Glorious Qur’an are sufficient to satisfy a Muslim as to why pork is forbidden.</p>

<h3 id="pork-prohibited-in-the-bible">2. Pork prohibited in the Bible</h3>

<h3 id="section-1">2. 《圣经》里禁食猪肉</h3>
<p>The Christian is likely to be convinced by his religious scriptures. The Bible prohibits the consumption of pork, in the Book of Leviticus:</p>

<p>“And the swine, though he divide the hoof, and be cloven footed, yet he cheweth not the cud; he is unclean to you.”</p>

<p>“Of their flesh shall ye not eat, and their carcase shall ye not touch, they are unclean to you.”</p>

<p>[Book of Leviticus 11:7-8]</p>

<p>Pork is also prohibited in the Bible in the Book of Deuteronomy:</p>

<p>“And the swine, because it divideth the hoof, yet cheweth not the cud, it is unclean unto you. Ye shall not eat of their flesh, nor touch their dead carcase.”</p>

<p>[Book of Deuteronomy 14:8]</p>

<p>A similar prohibition is repeated in the Bible in the Book of Isaiah Chapter 65 Verses 2-5.</p>

<h3 id="consumption-of-pork-causes-several-diseases">3. Consumption of pork causes several diseases</h3>

<h3 id="section-2">3. 食用猪肉会造成几种疾病</h3>
<p>The other non-Muslims and atheists will agree only if convinced through reason, logic and science. Eating of pork can cause no less than seventy different types of diseases. A person can have various helminths like roundworm, pinworm, hookworm, etc. One of the most dangerous is Taenia Solium, which is in lay man’s terminology called tapeworm. It harbours in the intestine and is very long. Its ova i.e. eggs, enter the blood stream and can reach almost all the organs of the body. If it enters the brain it can cause memory loss. If it enters the heart it can cause heart attack, if it enters the eye it can cause blindness, if it enters the liver it can cause liver damage. It can damage almost all the organs of the body.</p>

<p>Another dangerous helminthes is Trichuris trichiura. A common misconception about pork is that if it is cooked well, these ova die. In a research project undertaken in America, it was found that out of twenty-four people suffering from Trichuris trichiura, twenty-two had cooked the pork very well. This indicates that the ova present in the pork do not die under normal cooking temperature.</p>

<h3 id="pork-has-fat-building-material">4. Pork has fat building material</h3>

<h3 id="section-3">4. 猪肉富含脂肪</h3>
<p>Pork has very little muscle building material and contains excess of fat. This fat gets deposited in the vessels and can cause hypertension and heart attack. It is not surprising that over 50 million Americans suffer from hypertension.</p>

<h3 id="pig-is-one-of-the-filthiest-animals-on-earth">5. Pig is one of the filthiest animals on earth</h3>

<h3 id="section-4">5. 猪是地球上最污秽的动物之一</h3>
<p>The pig is one of the filthiest animals on earth. It lives and thrives on muck, faeces and dirt. It is the best scavenger that I know that God has produced. In the villages they don’t have modern toilets and the villagers excrete in the open air. Very often excreta is cleared by pigs.</p>

<p>Some may argue that in advanced countries like Australia, pigs are bred in very clean and hygienic conditions. Even in these hygienic conditions the pigs are kept together in sties. No matter how hard you try to keep them clean they are filthy by nature. They eat and enjoy their own as well as their neighbour’s excreta.</p>

<h3 id="pig-is-the-most-shameless-animal">6. Pig is the most shameless animal</h3>

<h3 id="section-5">6. 猪是最没有廉耻的动物</h3>
<p>The pig is the most shameless animal on the face of the earth. It is the only animal that invites its friends to have sex with its mate. In America, most people consume pork. Many times after dance parties, they have swapping of wives; i.e. many say “you sleep with my wife and I will sleep with your wife”. If you eat pigs then you behave like pigs. We Indians look upon America to be very advanced and sophisticated. Whatever they do, we follow after a few years. According to an article in Island magazine, this practice of swapping wives has become common in the affluent circles of Mumbai.</p>

<p>猪是地球上最没有廉耻的动物，它们是唯一一种会邀请朋友和自己配偶进行交媾的动物。在美国，大部分人食用猪肉。舞会之后，他们经常相互交换妻子。比如，很多人会这样说”你和我的妻子睡觉，我和你的妻子睡觉”。如果你食用猪肉，你的行为就会变成猪一样。我们印度人眼中认为美国很高级很厉害。如果他们做什么，我们也跟着效仿，不出几年，根据Island magazine的一篇文章，换妻就会在孟买的富人圈里很普遍。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搭建局域网跨路由网络]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/22/routing-cross/"/>
    <updated>2013-06-22T17:34:57+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/22/routing-cross</id>
    <content type="html"><![CDATA[<p>场景：两个路由器每个都组建一个局域网，每个局域网里的电脑想访问另一个局域网的电脑。</p>

<!--more-->

<p><a href="http://www.flickr.com/photos/xixitalk/9108420474/"><img src="http://farm6.static.flickr.com/5544/9108420474_421bdc9dc4_b.jpg" title="跨路由器访问设置" /></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[世界卫生组织（WHO）对转基因技术的看法]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/21/WHO-Transgene/"/>
    <updated>2013-06-21T19:23:57+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/21/WHO-Transgene</id>
    <content type="html"><![CDATA[<p>世界卫生组织（WHO）2005年的生物技术报告 <a href="http://www.who.int/foodsafety/fs_management/No_04_Biotech_Jun05_ch.pdf">http://www.who.int/foodsafety/fs_management/No_04_Biotech_Jun05_ch.pdf</a></p>

<ol>
  <li>该报告认为，转基因食品的发展可直接或间接有助于增进人类健康和发展。</li>
  <li>该报告还认为，转基因食品如果在投放市场之前没有进行适当评估，可能会对人类健康和环境产生潜在风险。</li>
  <li>现有转基因食品已通过风险评估，不太可能对人类健康带来风险，而且此类食品的消费尚未造成不利后果。</li>
  <li>今后，现代技术如将确实改进食品生产方式，应通过广泛的评价予以评估，包括评估对人类健康和环境的风险和利益以及社会和伦理问题。</li>
</ol>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress加快rake generate速度]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/20/Octopress-Rake-gen_deploy/"/>
    <updated>2013-06-20T05:35:54+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/20/Octopress-Rake-gen_deploy</id>
    <content type="html"><![CDATA[<p>octopress随着文件越来越多，<code>rake generate</code>越来越慢。这样可以加快速度。</p>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rake isolate[new post filename]
</span><span class="line">rake preview
</span><span class="line">rake integrate
</span><span class="line">rake gen_deploy
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>rake isolate</code>进行隔离，<code>rake integrate</code>进行隔离还原，<code>rake gen_deploy</code>进行生成和发布。</p>

<p>不过这个加快只是能够节省preview的时间而已，早点让你看到新博客的预览页面,并没有节省<code>rake generate &amp;&amp; rake deploy</code>一起的时间。</p>

<p>参考：</p>

<ol>
  <li>Some Octopress Rake Tips <a href="http://robdodson.me/blog/2012/06/11/some-octopress-rake-tips/">http://robdodson.me/blog/2012/06/11/some-octopress-rake-tips/</a></li>
  <li>縮短重新產生文章的時間 <a href="http://blog.eddie.com.tw/2011/10/30/speed-up-octopress-post-regeneration/">http://blog.eddie.com.tw/2011/10/30/speed-up-octopress-post-regeneration/</a></li>
  <li>加快generate的速度 <a href="http://blog.kent-chiu.com/blog/2013/03/04/octopress-configuration/">http://blog.kent-chiu.com/blog/2013/03/04/octopress-configuration/</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从已经存在的octopress新建环境]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/20/clone-from-exist-octopress/"/>
    <updated>2013-06-20T02:45:41+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/20/clone-from-exist-octopress</id>
    <content type="html"><![CDATA[<p>场景需求：为已经存在的octopress博客在另一个目录或者主机新建一个octopress发布环境</p>

<h3 id="sourcemaster">获得source和master分支代码</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git clone -b source git@github.com:xixitalk/xixitalk.github.com.git octopress
</span><span class="line">$ cd octopress
</span><span class="line">$ git clone git@github.com:xixitalk/xixitalk.github.com.git _deploy 
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<p>如果更改了Gemfile内容，用<code>bundle install</code>更新安装</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">bundle install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>参考：</p>

<p>Clone Your Octopress to Blog From Two Places <a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dnsmasq上分发WPAD]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/WPAD-with-DNS-on-Dnsmasq/"/>
    <updated>2013-06-19T22:34:04+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/WPAD-with-DNS-on-Dnsmasq</id>
    <content type="html"><![CDATA[<p><a href="http://en.wikipedia.org/wiki/Web_Proxy_Autodiscovery_Protocol">WPAD</a>全称是Web Proxy Auto-Discovery，可以通过DHCP或者DNS进行代理分发，这样局域网里客户端连接上后自动进行代理。</p>

<p><a href="http://www.thekelleys.org.uk/dnsmasq/doc.html">dnsmasq</a>为一个轻量的DNS和DHCP服务器。dnsmasq.conf配置说明<a href="http://www.thekelleys.org.uk/dnsmasq/docs/dnsmasq.conf.example">dnsmasq.conf.example</a>。</p>

<p>以下配置为资料搜集，仅供参考，我并未实践，并且在我实践过程中可能随时修改，有疑问可以交流但不要期望获得答案。</p>

<!--more-->

<h3 id="dnsmasqhdcpwpad">Dnsmasq上通过HDCP分发WPAD</h3>
<p>在dnsmasq.conf里这样配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">## dnsmasq is a combined dns and dhcp server
</span><span class="line">## 	/etc/dnsmasq.conf
</span><span class="line">dhcp-option=252,http://your.server.here/wpad.dat 
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="dnsmasqdnswpad">Dnsmasq上通过DNS分发WPAD</h3>
<p>在dnsmasq.conf里这样配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">txt-record=host.co.nz,"service:wpad:!http://wpad.host.co.nz:80/proxy.pac"
</span><span class="line">srv-host=wpad.tcp.host.co.nz,wpad.host.co.nz,80
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>参考：</p>

<ol>
  <li>Automatic Proxy Configuration  <a href="http://users.telenet.be/mydotcom/library/network/pac.htm">http://users.telenet.be/mydotcom/library/network/pac.htm</a>  </li>
  <li>[Dnsmasq-discuss] wpad and DNS <a href="http://lists.thekelleys.org.uk/pipermail/dnsmasq-discuss/2006q1/000561.html">http://lists.thekelleys.org.uk/pipermail/dnsmasq-discuss/2006q1/000561.html</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress里插入flickr的图片]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/Insert-a-Image-From-Flickr-in-Octopress/"/>
    <updated>2013-06-19T18:17:24+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/Insert-a-Image-From-Flickr-in-Octopress</id>
    <content type="html"><![CDATA[<p><a href="http://www.flickr.com">flickr</a>更新之后，免费1T空间，同时可以上传质量很好的图片。<a href="http://www.instagram.com">instagram</a>的图片质量太差了。</p>

<!--more-->

<h3 id="gemfileflickraw">Gemfile添加flickraw</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">gem 'flickraw', '~&gt; 0.9.6'
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行一次<code>bundle install</code>，确保系统里安装<code>flickraw</code></p>

<h3 id="flickrapikey">申请flickr的API的key</h3>

<p>从flickr.com申请api_key和shared_secret，略过。</p>

<h3 id="flickrimagerbplugins">添加flickr_image.rb到plugins目录</h3>

<p>示例代码</p>

<script src="https://gist.github.com/3156265.js?file=flickr_image.rb"></script>

<p>ENV[“FLICKR_KEY”]和ENV[“FLICKR_SECRET”]可以直接替换成从flickr.com申请的api_key和shared_secret字符串，避免使用环境变量。</p>

<h3 id="flickrimagerb">flickr_image.rb添加代理</h3>

<p>国内不能直接访问<code>flickr.com</code>，<code>rake generate</code>生成时执行<code>flickr_image.rb</code>会出错，所以需要设置一个代理解决。假设代理为一个HTTP代理，修改文件<code>plugins/flickr_image.rb</code>,在<code>FlickRaw.api_key</code>和<code>FlickRaw.shared_secret</code>代码行下添加如下代理。其他代理类似。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">FlickRaw.proxy = "http://192.168.1.106:8118/"
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section">实例测试</h3>

<p>代码里这样使用
<script src="https://gist.github.com/3156265.js?file=2012-07-21-post-with-images-from-flickr.markdown_"></script></p>

<p><code>b</code>是指big，图片大小约为1024x768，基本可以满足博客显示。如果要更小图片，可以用<code>m</code>,表示medium。再小的用<code>sq</code>,表示square thumbnail。</p>

<p><a href="http://www.flickr.com/photos/xixitalk/6293807068/"><img src="http://farm7.static.flickr.com/6216/6293807068_038b43f12d_b.jpg" title="" /></a></p>

<h3 id="section-1">参考</h3>

<ol>
  <li>Insert a Image From Flickr in Octopress <a href="http://blog.ychuang.org/blog/2012/11/14/insert-a-image-from-flickr-in-octopress/">http://blog.ychuang.org/blog/2012/11/14/insert-a-image-from-flickr-in-octopress/</a></li>
  <li>Fetch images from Flickr to show in Octopress/Jekyll <a href="http://blog.pixarea.com/2012/07/fetch-images-from-flickr-to-show-in-octopress-slash-jekyll">http://blog.pixarea.com/2012/07/fetch-images-from-flickr-to-show-in-octopress-slash-jekyll</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grep命令手册]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/grep-man/"/>
    <updated>2013-06-19T01:51:43+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/grep-man</id>
    <content type="html"><![CDATA[<p>详细参看这个博文 <a href="http://blog.51yip.com/linux/1008.html">http://blog.51yip.com/linux/1008.html</a></p>

<p>GNU Grep 2.14 <a href="http://www.gnu.org/software/grep/manual/grep.html">http://www.gnu.org/software/grep/manual/grep.html</a></p>

<p>我常用grep命令是这样的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">grep -r -n -I Search_String  DIR
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>-I 跳过二进制文件<br />
-r 递归子目录<br />
-n 显示匹配的行号<br />
Search_String 寻找匹配的字符串<br />
DIR 查找的目录范围</p>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
</pre></td><td class="code"><pre><code class=""><span class="line">grep --help  
</span><span class="line">匹配模式选择:  
</span><span class="line"> -E, --extended-regexp     扩展正则表达式egrep  
</span><span class="line"> -F, --fixed-strings       一个换行符分隔的字符串的集合fgrep  
</span><span class="line"> -G, --basic-regexp        基本正则  
</span><span class="line"> -P, --perl-regexp         调用的perl正则  
</span><span class="line"> -e, --regexp=PATTERN      后面根正则模式，默认无  
</span><span class="line"> -f, --file=FILE           从文件中获得匹配模式  
</span><span class="line"> -i, --ignore-case         不区分大小写  
</span><span class="line"> -w, --word-regexp         匹配整个单词  
</span><span class="line"> -x, --line-regexp         匹配整行  
</span><span class="line"> -z, --null-data           a data line ends in 0 byte, not newline  
</span><span class="line">  
</span><span class="line">杂项:  
</span><span class="line"> -s, --no-messages         不显示错误信息  
</span><span class="line"> -v, --invert-match        显示不匹配的行  
</span><span class="line"> -V, --version             显示版本号  
</span><span class="line"> --help                    显示帮助信息  
</span><span class="line"> --mmap                use memory-mapped input if possible  
</span><span class="line">  
</span><span class="line">输入控制:  
</span><span class="line"> -m, --max-count=NUM       匹配的最大数  
</span><span class="line"> -b, --byte-offset         打印匹配行前面打印该行所在的块号码。  
</span><span class="line"> -n, --line-number         显示的加上匹配所在的行号  
</span><span class="line"> --line-buffered           刷新输出每一行  
</span><span class="line"> -H, --with-filename       当搜索多个文件时，显示匹配文件名前缀  
</span><span class="line"> -h, --no-filename         当搜索多个文件时，不显示匹配文件名前缀  
</span><span class="line"> --label=LABEL            print LABEL as filename for standard input  
</span><span class="line"> -o, --only-matching       show only the part of a line matching PATTERN  
</span><span class="line"> -q, --quiet, --silent     不显示任何东西  
</span><span class="line"> --binary-files=TYPE   assume that binary files are TYPE  
</span><span class="line"> TYPE is 'binary', 'text', or 'without-match'  
</span><span class="line"> -a, --text                匹配二进制的东西  
</span><span class="line"> -I                        不匹配二进制的东西  
</span><span class="line"> -d, --directories=ACTION  目录操作，读取，递归，跳过  
</span><span class="line"> ACTION is 'read', 'recurse', or 'skip'  
</span><span class="line"> -D, --devices=ACTION      设置对设备，FIFO,管道的操作，读取，跳过  
</span><span class="line"> ACTION is 'read' or 'skip'  
</span><span class="line"> -R, -r, --recursive       递归调用  
</span><span class="line"> --include=PATTERN     files that match PATTERN will be examined  
</span><span class="line"> --exclude=PATTERN     files that match PATTERN will be skipped.  
</span><span class="line"> --exclude-from=FILE   files that match PATTERN in FILE will be skipped.  
</span><span class="line"> -L, --files-without-match 匹配多个文件时，显示不匹配的文件名  
</span><span class="line"> -l, --files-with-matches  匹配多个文件时，显示匹配的文件名  
</span><span class="line"> -c, --count               显示匹配了多少次  
</span><span class="line"> -Z, --null                print 0 byte after FILE name  
</span><span class="line">  
</span><span class="line">文件控制:  
</span><span class="line"> -B, --before-context=NUM  打印匹配本身以及前面的几个行由NUM控制  
</span><span class="line"> -A, --after-context=NUM   打印匹配本身以及随后的几个行由NUM控制  
</span><span class="line"> -C, --context=NUM         打印匹配本身以及随后，前面的几个行由NUM控制  
</span><span class="line"> -NUM                      根-C的用法一样的  
</span><span class="line"> --color[=WHEN],  
</span><span class="line"> --colour[=WHEN]       use markers to distinguish the matching string  
</span><span class="line"> WHEN may be `always', `never' or `auto'.  
</span><span class="line"> -U, --binary              do not strip CR characters at EOL (MSDOS)  
</span><span class="line"> -u, --unix-byte-offsets   report offsets as if CRs were not there (MSDOS)  
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搭建带代理的奶瓶腿]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/16/netputweets-proxy/"/>
    <updated>2013-06-16T05:39:29+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/16/netputweets-proxy</id>
    <content type="html"><![CDATA[<p>今天证实了一个猜想：因为奶瓶腿连接twitter API是通过cURL模块，而cURL本身支持proxy，所以在国内可以搭建奶瓶腿，只要加上代理就可以正常使用。代理可以是shadowsocks转换的socks代理，也可以是再通过polipo进一步转化的HTTP代理。</p>

<!--more-->

<h3 id="section">下载奶瓶腿代码</h3>

<p>把奶瓶腿的代码放在apache的浏览的根目录：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git clone git@github.com:netputer/netputweets.git
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以将目录netputweets修改为t。</p>

<h3 id="section-1">安装好奶瓶腿所要的环境</h3>

<p>apache、php5+、cURL、URL Rewrite等，这部分略过。</p>

<h3 id="section-2">添加代理</h3>

<p>假设代理是：HTTP 192.168.1.106:8118,其他格式代理相应修改。<br />
修改img.php、class.upload.php、twitter.php、handler.php文件里在所有执行<code>curl_exec</code>函数前添加：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">curl_setopt($ch, CURLOPT_PROXY, '192.168.1.106:8118');
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>setup.php</code>文件里的<code>curl_exec</code>前不要修改。</p>

<h3 id="section-3">安装奶瓶腿</h3>

<p>浏览器里访问http://xxxxx.org/t/setup.php，进行奶瓶腿安装。安装后正常进行twitter帐号关联。</p>

<p><img src="https://pbs.twimg.com/media/BMzloh6CMAEonlF.png:large" alt="netputweets" /></p>

<h3 id="base64">推文两次base64编码防止敏感词过滤</h3>

<p>推文进行base64两次编码，客户端浏览器进行base64两次解码，这样可以防止敏感词过滤。缺点是按照base64的特点两次编码推文字节会变成原来的<script type="math/tex"> \frac{16}{9} </script>。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi上安装Go lang并编译cow proxy]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/14/go-lang-for-raspberrypi/"/>
    <updated>2013-06-14T19:48:41+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/14/go-lang-for-raspberrypi</id>
    <content type="html"><![CDATA[<h3 id="go">安装go语言</h3>

<p>选用非官方的二进制软件包，详细：<a href="http://dave.cheney.net/unofficial-arm-tarballs">http://dave.cheney.net/unofficial-arm-tarballs</a></p>

<p>ARMv6 (Raspberry Pi, etc)<br />
<a href="http://dave.cheney.net/paste/go1.1.linux-arm~armv6-1.tar.gz">go1.1.linux-arm~armv6-1.tar.gz</a><br />
sha1sum 2a76c9799aa5410090234edfda36ef69f5f99a42</p>

<!--more-->

<p>解压到/home/pi/go目录即可</p>

<h3 id="go-1">设置go语言编译环境变量</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">export GOROOT=/home/pi/go/go
</span><span class="line">export GOPATH=/home/pi/go/mygo
</span><span class="line">export PATH=$PATH:$GOROOT/bin
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果系统没有安装mercurial软件包，则需要用<code>apt-get</code>安装mercurial软件，cow proxy需要用到go语言的crypto package，<code>go get</code>会调用<code>hg</code>命令来获得。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo apt-get install mercurial
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="cow-proxy">编译cow proxy</h3>

<p><a href="https://github.com/cyfdecyf/cow">cow proxy</a>是<a href="http://twitter.com/cyfdecyf">@cyfdecyf</a>用go语言编写的一个自动代理，代码开源，支持二级socks代理。<br />
用下面的命令编译</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">go get github.com/cyfdecyf/cow
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果上面的命令出现go build出错<code>signal: killed</code>，再单独build</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">go build github.com/cyfdecyf/cow
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>编译好的cow二进制文件位于/home/pi/go/mygo目录下。</p>

<p>我已经编译好的二进制在<a href="https://github.com/xixitalk/build/tree/master/cow">https://github.com/xixitalk/build/tree/master/cow</a></p>

<h3 id="section">下一次更新代码再编译</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">go get -u  github.com/cyfdecyf/cow
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[支持twitter的AppEngine-OAuth-Library]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/14/AppEngine-OAuth-Library/"/>
    <updated>2013-06-14T17:13:55+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/14/AppEngine-OAuth-Library</id>
    <content type="html"><![CDATA[<p>自己在GAE上写了个浏览twitter的web页面，虽然丑陋但是自我感觉良好，使用的是v1.0的API，这两天twitter停用了v1.0的API，换用v1.1，调试了一下没有调试好，还是直接用别人造好的轮子吧。</p>

<p>AppEngine-OAuth-Library <a href="https://github.com/mikeknapp/AppEngine-OAuth-Library">https://github.com/mikeknapp/AppEngine-OAuth-Library</a></p>

<!--more-->

<p>或者直接使用OAuth还简单一些，另一个<a href="https://developers.google.com/appengine/docs/python/oauth/">https://developers.google.com/appengine/docs/python/oauth/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[李娟《我的阿勒泰》]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/14/wo-de-aletai/"/>
    <updated>2013-06-14T00:11:55+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/14/wo-de-aletai</id>
    <content type="html"><![CDATA[<p>李娟《我的阿勒泰》</p>

<p><img src="http://img3.douban.com/lpic/s4507495.jpg" alt="我的阿勒泰" /></p>

<p>李娟的《我的阿勒泰》给人们展示的是新疆另一面。书中描绘的新疆和我们从新闻中所了解的新疆仿佛是存在在两个平行世界里。</p>

<!--more-->

<blockquote>
  <p>每次回家的前一天，总是在超市里转啊,转啊。转到“中老年专柜”，看到麦片，就买回去了。我回到家，说：“这是麦片。”她们都很高兴的样子，因为只听说过，从没吃过。我也没吃过，但还是想当然地煮了一大锅。先给外婆盛一碗，她笑眯眯喝了一口，然后又默默地喝了一口，说：“好喝。”然后，就死活也不肯喝第三口了。</p>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python从字符串用readlines读取操作]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/13/python-readlines-from-string/"/>
    <updated>2013-06-13T17:57:17+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/13/python-readlines-from-string</id>
    <content type="html"><![CDATA[<p>场景：用<a href="http://curl.haxx.se/">cURL</a>命令POST了一个文本文件到web服务器，想在服务器端对这个文件进行readlines操作</p>

<!--more-->

<h3 id="curlpost">用cURL命令POST文件</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">curl --form "fileupload=@filename.txt" http://example.com/resource.cgi
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section">服务器端解析</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class=""><span class="line">import StringIO
</span><span class="line">
</span><span class="line">class Markdown():
</span><span class="line">   def get(self):
</span><span class="line">       pass
</span><span class="line">
</span><span class="line">   def post(self):
</span><span class="line">       filecontent = ...
</span><span class="line">       bufStr = StringIO.StringIO(filecontent)
</span><span class="line">	for oneline in bufStr.readlines():
</span><span class="line">		oneline = oneline.replace('\n','')
</span><span class="line">		print oneline
</span><span class="line">
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>参考：</p>

<p>What is the cURL command-line syntax to do a POST request? <a href="http://superuser.com/questions/149329/what-is-the-curl-command-line-syntax-to-do-a-post-request">http://superuser.com/questions/149329/what-is-the-curl-command-line-syntax-to-do-a-post-request</a></p>

<p>Python readline() from a string? <a href="http://stackoverflow.com/questions/7472839/python-readline-from-a-string">http://stackoverflow.com/questions/7472839/python-readline-from-a-string</a></p>

<p>Using cURL to automate HTTP jobs <a href="http://curl.haxx.se/docs/httpscripting.html">http://curl.haxx.se/docs/httpscripting.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[曹操的《短歌行》]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/12/duan-ge-xing-caocao/"/>
    <updated>2013-06-12T08:37:14+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/12/duan-ge-xing-caocao</id>
    <content type="html"><![CDATA[<p>Dǔan   gē    xīng        cǎo  cao<br />
短      歌    行          曹   操 </p>

<p>最喜欢曹操的《短歌行》</p>

<!--more-->

<p>Duì  jiǔ  dāng  gē   rén  shēng   jǐ  hé<br />
对   酒   当  歌，   人     生   几  何？ </p>

<p>Pì  rú  zhāo  lù  qù  rì  kǔ  duō<br />
譬  如   朝   露，去 日  苦    多。 </p>

<p>Kǎi  dāng  yǐ  kāng  yō u  sī   nán  wàng<br />
慨     当  以   慷，  忧   思   难    忘。</p>

<p>Hé  yǐ   jiě  yōu  wéi  yǒu  dù  kāng<br />
何   以  解   忧， 唯   有   杜  康。 </p>

<p>Qīng  qīng   zǐ  jīn   yōu   yōu   wǒ   xīn<br />
青      青   子   衿， 悠     悠    我    心。 </p>

<p>Dàn  wéi  jūn  gù   chén  yín  zhì   jīn<br />
但    为   君   故，  沉   吟   至   今。 </p>

<p>Yōu  yōu  lù  míng  shí   yě  zhī  píng<br />
呦    呦   鹿  鸣 ， 食   野   之  苹 。</p>

<p>Wǒ   yǒu  jiā  bīn    gǔ   sè  chuī  shēng<br />
我    有   嘉   宾，   鼓   瑟   吹   笙。</p>

<p>Míng   míng   rú   yuè    hé  shí  kě  duō <br />
明       明    如    月，  何  时   可  掇。 </p>

<p>Yōu  cóng  zhōng  lái     bù  kě  duàn  jué<br />
忧     从    中    来 ，  不  可   断   绝。</p>

<p>Yuè  mò  dù  qiān   wǎng  yòng  xiāng  cún<br />
越    陌   度  阡 ，  枉     用    相    存。 </p>

<p>Qì   kuò  tán  yàn  xīn  niàn  jiù  ēn <br />
契    阔   谈  宴 ，心    念   旧  恩。</p>

<p>Yuè   míng   xīng  xī   wū  què  nán   fēi<br />
月     明     星   稀 ，乌   鹊   南    飞。</p>

<p>Rào  shù   sān   zā   hé  zhī   kě   yī<br />
绕    树    三   匝 ，何   枝   可   依？</p>

<p>Shān  bù  yàn  gāo   hǎi  bù   yàn   shēn<br />
山    不   厌   高 ， 海   不   厌    深 。 </p>

<p>Zhōu  gōng  tǔ   bǔ  tiān  xià  guī   xīn <br />
周      公   吐  哺 ，天   下   归   心 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[推荐电影《stand up guys 哥们站直了》]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/12/movie-stan-up-guys/"/>
    <updated>2013-06-12T04:12:01+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/12/movie-stan-up-guys</id>
    <content type="html"><![CDATA[<p>刚才在推上看到 <a href="http://twitter.com/justone_he">@justone_he</a> 推荐电影《stand up guys》，下载一看果然不错。</p>

<p><img src="http://www.impawards.com/2012/posters/stand_up_guys_ver3.jpg" alt="stand up guys" /><br />
imdb:<a href="http://www.imdb.com/title/tt1389096/">http://www.imdb.com/title/tt1389096/</a></p>

<p>看头：阿尔·帕西诺、克里斯托弗·沃肯和艾伦·阿金老戏骨的精彩表演。</p>

<p>维尔（阿尔·帕西诺饰）28年前犯事入狱，在监狱里一句也没说出卖兄弟的话，但是一个黑老大认为是他乱枪打死自己唯一的儿子。维尔在监狱里坐了28年牢终于假释出狱，老基友达克（克里斯托弗·沃肯饰）来接他，年过花甲的维尔和达克重述衷肠，缅怀过去年青时光，庆祝狂欢一下生活重新开始。维尔却慢慢感觉到了黑老大要向他动手了，杀手是谁呢？</p>

<!-- more -->

<p><img src="http://images.screenrush.co.uk/medias/nmedia/18/93/48/96/20259392.jpg" alt="stand up guys" /></p>

<p><img src="http://images.screenrush.co.uk/medias/nmedia/18/93/18/04/20240304.jpg" alt="stand up guys" /></p>

<p><img src="http://images.screenrush.co.uk/medias/nmedia/18/95/98/07/20483674.jpg" alt="stand up guys" /></p>

<p><img src="http://www.movie-moron.com/wp-content/gallery/review/stand-up-guys-review-2.jpg" alt="stand up guys" /></p>

<p><img src="http://uk.web.img2.acsta.net/medias/nmedia/18/95/98/07/20483671.jpg" alt="stand up guys" /></p>

<p>人人影视不解释 <a href="http://www.yyets.com/resource/28117">http://www.yyets.com/resource/28117</a></p>
]]></content>
  </entry>
  
</feed>
