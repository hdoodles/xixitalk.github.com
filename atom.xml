<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[xixitalk's snippet]]></title>
  <link href="http://xixitalk.github.com/atom.xml" rel="self"/>
  <link href="http://xixitalk.github.com/"/>
  <updated>2013-07-16T10:13:57+08:00</updated>
  <id>http://xixitalk.github.com/</id>
  <author>
    <name><![CDATA[xixitalk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[git ssh使用代理]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/12/git-ssh-proxy/"/>
    <updated>2013-07-12T16:23:33+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/12/git-ssh-proxy</id>
    <content type="html"><![CDATA[<p>昨天在树莓派上发现通过<code>ssh</code>方式向<code>github.com</code>的代码仓库<code>git push</code>代码一直提示连接<code>github.com</code>的22端口失败。而<code>HTTP</code>和<code>HTTPS</code>访问<code>github.com</code>正常，怀疑<code>github.com</code>的22端口被墙了。使用<code>ssh</code>方式的特点是可以不用输入密码，方便在shell里进行自动操作，而<code>https</code>需要输入密码。</p>

<p>树莓派上有<code>socks5</code>代理和<code>http</code>代理，下面配置<code>git ssh</code>通过代理进行<code>git</code>操作。</p>

<!--more-->

<h3 id="git-sshsocks5">git ssh通过socks5代理</h3>
<p><a href="http://chunyemen.org/archives/813">在Mac OSX上通过SSH代理实现github访问</a></p>

<h3 id="git-sshhttp">git ssh通过http代理</h3>
<p><a href="http://blog.yxwang.me/2010/05/git-through-https-proxy/">利用 HTTPS 代理访问 GitHub</a></p>

<h3 id="section">我的配置</h3>
<p>通过<code>socks5</code>代理配置比较繁琐，配置后<code>git push</code>成功了一次，但是后面还是一直提示失败，找不到原因。后来改用<code>http</code>代理，代理成功。我的详细配置如下。</p>

<h4 id="corkscrew">安装corkscrew</h4>
<p>如果系统里没有安装<code>corkscrew</code>，进行安装。</p>

<pre><code>sudo apt-get install corkscrew
</code></pre>

<h4 id="sshconfig">配置ssh的.config</h4>
<p>配置<code>~/.ssh/config</code>,如果<code>config</code>没有创建一个。我的<code>http</code>代理是<code>127.0.0.1:8118</code>，用户名是<code>pi</code>。</p>

<pre><code>Host github.com
User git
ProxyCommand corkscrew 127.0.0.1 8118 %h %p
IdentityFile /home/pi/.ssh/id_rsa
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《美丽新世界》]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/11/Brave-New-World/"/>
    <updated>2013-07-11T23:49:04+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/11/Brave-New-World</id>
    <content type="html"><![CDATA[<p><a href="http://www.ruanyifeng.com/blog/2011/03/brave_new_world.html">阮一峰《美丽新世界》读后感》</a></p>

<p><a href="http://www.guokr.com/blog/310237/">金色葡萄《如何拒绝进入美丽新世界》</a></p>

<p><a href="http://www.zhihu.com/question/19986748">知乎《如何评价阿道司 · 赫胥黎《美丽新世界》？它和《1984》对现实的影响有何异同？最重要的，书中的世界会有到来的一天吗？》</a></p>

<!--more-->

<script src="http://xixitalk.github.com/javascripts/base64.js" type="text/javascript"> </script>
<p><span id="base64_block">RFFybHBhWGxxSUhsc0pUbm1vVGpnSW94T1RnMDQ0Q0w1WktNNkxXcjZJT2w2YnVPNTVxRTQ0Q0s1NzZPNUxpOTVwYXc1TGlXNTVXTTQ0Q0w1cGl2NWErNTVweXE1cDJsNTZTKzVMeWE1NXFFNUxpazU2ZU42YUtFNktlQjQ0Q0M0NENLTVRrNE5PT0FpK2FZcitXdnVlV0ZzZVM2cCtTNHUrUzVpZWFlZ2VhZGcrZWt2dVM4bXVhY3F1YWRwZWVhaE9hUGorZTdtTys4ak9lT3NPV2NxT1dGdU9XZWkrZWFoT2VrdnVTOG11ZXh1K1dlaSthWXIrYWNuZW15bk8rOGpPUzdqdW1BaittY3N1ZWFoT1Mvb2VhQnIrYWRwZWVjaSthY25lbXluT2VhaE9tN2tlYWFsK2VVbXVpSHMrV2twK1drcCtpMmhlV0h1dVM2aHVTNXB1UzRyZWVhaE9taWhPaW9nT09BZ3VpTGoraUJsT1dTak9TNHJlV2J2ZWVhaE9pL2tlUzdvK1dPaHVXUHN1UzRpdVdTak9TNXB1UzRyZVdsa2VXUWlPZWFoT1M2aStTN3R1UzVuK1craU9Xa211KzhqT1M0cmVXYnZlZU9zT1djcU9XK2lPV2ttdWFXdWVtZG91UzVuK21EdmVpRHZlYUp2dVdJc09XOXNlV3RrT09BZ3VpQWpPT0FpdWUranVTNHZlYVdzT1M0bHVlVmpPT0FpK2FZcitXdnVlYXNwK2Ewc3VlK2p1V2J2ZWF3a2VTNHUrV2J2ZVd1dHVhY3F1YWRwZWVhaE9hUGorZTdtTys4ak9hS2dPYWNyK21kcWVhV3NPKzhqT1Mvb2VhQnIrZUlodWVDdU8rOGpPV29zZVM1a09pSHMrYXR1K09BZ2cwS1BIQStQQzl3UGcwSzVMaXQ1WnU5NTQ2dzVaeW81NXFFNTZTKzVMeWE1WVcyNWE2ZTVwaXY1TGlrNklDRjU1cUU1WStnNVlxZzQ0Q0M1TGlLNWJHQzVidTY1NjJSNkwrYjZLR001cGF3NlplNzVhNmg1cCtsNzd5TTVadSs1TG1tNWE2aDVwK2w3N3lNNTcyUjU3dWM1YTZoNXArbDc3eU02S2lBNks2NjVwV1A1b1NmNksrTjZMK0g1cnVrNzd5TTVvbVQ1WWU3NWJ5QzZLNnU3N3lNNW91bTVvaXE1TGlLNks2Lzc3eU01cHEwNVlxYjVvdUc2TCtCNzd5TTVydWw1NVNvNVlxejVwUzU3N3lNNXBxMDVZcWI1N3UwNTZpejc3eU01YTZhNTRLNTU1dVI1bzZuNzd5TTZMK1o1cTJqNXBpdjQ0Q0tNVGs0Tk9PQWkrbUhqT2FQaitlN21PZWFoT1M0aytXSXR1ZTduK2F5dSthZXR1YWVoT09BZ3VpQWpPUzRpK1d4Z3Vhd2tlUzhsK1drcCttRHFPV0lodWVEcmVpaHQrV0ZxK1dOcHVhdXRlV3RrT1dGdStlVW4rYVluK1c2cCsrOGpPaXZyZWlvZ09TNHUrV0txT21ZaWVXSnN1KzhqT1M0amVpd2lPYVV2K2F5dStXU2pPYWRnK1dJcWUrOGpPYXlvZWFjaWVtQWllUzR2dWFkZytXUGlPYUFqdWFndCsrOGpPbWpuK1dUZ2VpTnIrV1RnZVd1aWVXRnFPV05zZWFjdXVXUGlPYUFqdWFndCsrOGpPZU9yK1dpZytheG9lYWZrK2lIdE9lWmpPV1BpT2FBanVhZ3QrKzhqT21UdXVXa3FlZWJsdVdjc09tQWllZW5nT1dvc2VTNWtPKzhqT2VEcmVpaHQrZVV0ZVd0a09TNnArV1RnZSs4ak9hdG8rYURzK09BaXVXb3NlUzVrT2lIcythdHUrT0FpK2l2dE9lYWhPbUNvK2FndCsrOG11UzZ1dWV4dSthY2llV0hvT2kva2VhWG9PbVprT2VhaE9hMmlPbUJvK1dvc2VTNWtPZWFoT2Fzc3VhY20rT0FnZzBLUEhBK1BDOXdQZzBLNUxpTDZaMmk1cHlKNUxpcTVyeXI1NVM3NWErNTVhV2w1YWlCNWJDVTU1cUU0NENLTVRrNE5PT0FpK1dTak9pMXEraURwZW03anVlYWhPT0FpdWUranVTNHZlYVdzT1M0bHVlVmpPT0FpK2kvbStpaGpPV3Z1ZWF2bE8rOGpPZTdrK2l1dXVpdnRPaTFxK2lEcGVtN2p1V3Z1ZWFjcXVhZHBlZWFoT21paE9pb2dPaTJoZWkvaCtTNmh1V2xwZVdvZ2VXd2xPKzhqT21DbythWXIrV2JvT1M0dXVTN2x1ZXJtZVdjcU9hc3ArYTBzdWUranVhMHN1YXdrZVM0dStXSXR1VzZwdVdidmVXdXR1ZWFoT2lua3VXNnB1YWRwZWl2dE9lYWhPKzhqT2VybWVXY3FPV0ZzZVM2cCtTNHUrUzVpZWFlZ2VhZGcrV2J2ZVd1dHVhZHBlaXZ0T1dscGVXb2dlV3dsT1M0Z09lQ3VlUzVuK1M0amVpK2srUzZqdWkxcStpRHBlbTdqdU9BZ2cwSw==</span> <script type="text/javascript"> var line_name = 'base64_block';var content = document.getElementById(line_name).innerHTML;document.getElementById(line_name).innerHTML=Base64.decode(Base64.decode(content));</script></p>

<p><img src="http://ww2.sinaimg.cn/large/5ff29ca4jw1dft3aqb0pkj.jpg" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux常用命令和配置]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/11/linux-command/"/>
    <updated>2013-07-11T00:08:18+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/11/linux-command</id>
    <content type="html"><![CDATA[<p>下面是最近工作需要用到的命令，记录下来以供查阅。</p>

<h3 id="test">添加新用户test</h3>

<pre><code>useradd test
passwd test
mkdir /home/test
chown test /home/test
</code></pre>

<!--more-->

<p>将用户test加到管理员组</p>

<pre><code>gpasswd -a test admin
</code></pre>

<h3 id="ubuntusamba">ubuntu重启samba</h3>

<pre><code>sudo service smbd start
sudo service smbd stop
sudo service smbd restart
</code></pre>

<h3 id="terminal">在terminal里方向键翻不出历史命令</h3>
<p>修改设置用户shell为bash，debian和ubuntu的新版本默认是dash</p>

<h3 id="svn">SVN命令操作</h3>

<h4 id="checkout">checkout</h4>

<pre><code>svn checkout http://10.41.1.1/svn/project/tags/  --username test
</code></pre>

<h4 id="update">update</h4>

<pre><code>svn update   //更新到最新
svn update --revision N //更新到版本N，-r
</code></pre>

<h4 id="add">add</h4>

<pre><code>svn add file  //添加文件到版本管理里，需要commit操作才到远程代码仓库，file支持通配符
</code></pre>

<h4 id="commit">commit</h4>

<pre><code>svn commit -m "bugs fix"
</code></pre>

<h4 id="log">log</h4>

<pre><code>svn log [PATH]  //查看修改提交的commit log
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最近一些有趣的网页]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/09/funny-site/"/>
    <updated>2013-07-09T06:51:46+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/09/funny-site</id>
    <content type="html"><![CDATA[<h3 id="section">宇宙囧片王：天机•富春山居图</h3>
<p><a href="http://pulolesu.proresu.com/dream/kuso/switch1.html">宇宙囧片王：天机•富春山居图（上）</a><br />
<a href="http://pulolesu.proresu.com/dream/kuso/switch2.html">宇宙囧片王：天机•富春山居图（中）</a><br />
<a href="http://pulolesu.proresu.com/dream/kuso/switch3.html">宇宙囧片王：天机•富春山居图（下）</a></p>

<!--more-->

<h3 id="ma">少年Ma的奇幻历史漂流之旅</h3>
<p>马伯庸的新博文《<a href="http://blog.sina.com.cn/s/blog_561ee4750101cdr3.html">少年Ma的奇幻历史漂流之旅</a>》讲述一个村级的博物馆竟然有大批清、明、元、唐、隋、晋、东汉、西周、商、夏、尧舜、炎帝、黄帝各个时代的珍品，去过北京故宫和台湾故宫的人们，不能不去齐名的河北衡水市某村级<strike>冀宝斋</strike>博物馆。</p>

<h3 id="section-1">看个美女贴调节一下</h3>
<p>水木社区<a href="http://www.newsmth.net/bbstcon.php?board=DSLR&amp;gid=808516395">这哥们的摄影水平怎么样？</a></p>

<p><img src="http://att.newsmth.net/att.php?p.179.808516395.2462602.jpg" alt="imgs" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中国时区：CCT]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/06/china-coast-time/"/>
    <updated>2013-07-06T16:17:55+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/06/china-coast-time</id>
    <content type="html"><![CDATA[<p>octopress的<code>rake generate</code>的时候，如果时间在晚上22：00到24：00左右，发现生成的博客HTML文件日期会是第二天的日期。Google之后有人说要加<code>TZ=CCT</code>来设定时区。</p>

<!--more-->

<p>CCT（China Coast Time）是中国沿海时间。在用户目录下<code>.profile</code>或者<code>.bashrc</code>加入<code>TZ=CCT</code>。</p>

<pre><code>export TZ=CCT
</code></pre>

<p>可能<code>Asia/Shanghai</code>更好些</p>

<pre><code>export TZ='Asia/Shanghai'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如果世界上只剩一个女人，将会发生什么？]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/06/what-will-happen-if-only-one-woman-left/"/>
    <updated>2013-07-06T06:33:32+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/06/what-will-happen-if-only-one-woman-left</id>
    <content type="html"><![CDATA[<blockquote><p>【如果世界上只剩一个女人，将会发生什么？】J大神：@煽动安全 同学提到的文章已经全部翻译完成。 供君观赏。 http://zhi.hu/TwlK （分享自 @知乎） 真实事件回答假设性大题，故事很长，但强烈推荐。</p><footer><strong>欧米(‏@omegaleeV)</strong> <cite><a href="https://twitter.com/omegaleeV/status/353114879214882817">twitter.com/omegaleeV/status/&hellip;</a></cite></footer></blockquote>

<!--more-->

<p>知乎地址:<a href="http://www.zhihu.com/question/21267570">如果世界上只剩一个女人，将会发生什么？</a>,日本原文:<a href="http://ww5.tiki.ne.jp/~qyoshida/jikenbo/064anatahan.htm">孤島に女１人と男32人。アナタハン島で起こった、女をめぐっての殺し合い</a></p>

<h3 id="section">在孤岛上的1个女人和32个男人。在安纳塔汉岛上发生的，围绕着女人的互相杀戮。</h3>

<p>从战争中期到战后，有女性1名和男性32名留在了太平洋上的小岛·安纳塔汉岛上。直到军队来救助的6年间，围绕着女人展开的杀人，失踪事件接连发生。</p>

<p><img src="http://ww5.tiki.ne.jp/~qyoshida/jikenbo/064-chizu.jpg" alt="maps" /></p>

<p>位于从塞班岛以北约177公里的【安纳塔汉岛】是太平洋·马里亚纳群岛的小岛。长约9公里，宽约3.7公里小型岛，岛的中心部分是丛林。并非无人岛。
战争快要结束的昭和19年（1944年），当时一个叫【南阳兴发】的日本企业在这座岛上经营椰子林。</p>

<p>比加和子（24）住在这座岛上。因为和子的丈夫是南阳兴发的员工，被调动到了安纳塔汉岛上。</p>

<p>当时在岛上居住的日本人有，比加和子和他的丈夫正一，加上丈夫的上司中里（化名）三人。当时的和子虽然和他的丈夫同住，但是也和他丈夫的上司中里保持着和夫妇同样的关系。</p>

<p>此外，原先在岛上住着的原住民有将近25人，中里和和子夫妇雇佣着他们经营农场。</p>

<p>这个时候，仍处于战中，塞班岛也渐渐成为激战的地点之一。有一天，和子的丈夫因为担心应该在帕甘岛上的妹妹，说了声要去接她便离开了小岛。但是没过多久塞班岛便受到了攻击，从那以后和子的丈夫就再也没有了音讯。</p>

<p>丈夫离开小岛的两天后，安纳塔汉岛受到了美军的空袭。 轰炸中，和子和中里逃到了丛林中，虽然性命得到了拯救，但是再次回到家中后，遍地已是被火烧得一片狼藉。</p>

<p>饲养的40头猪和20只鸡好不容易得以残存，但是在生活上，无论住的还是穿的都产生了非常大的麻烦。</p>

<p>因为丈夫离开了小岛，在岛上留下的日本人只剩下了和子和丈夫的上司中里两人。自此只能依靠两人的力量生活下去。这个中里虽然在塞班岛上有着自己的妻子和孩子，但那时却立即就和和子开始了夫妻生活。</p>

<p>昭和19年（1944年）6月12日，这天，从安纳塔汉岛向着楚克群岛进发的数艘鲣鱼渔船受到了来自美军的攻击。</p>

<p>因此鲣鱼渔船有3艘沉没，1艘产生了很大的损坏。沉没的3只渔船的船员设法逃出后游到了安纳塔汉岛。此外，破损的那艘渔船也设法好不容易抵达了安纳塔汉岛，但是却再次受到了攻击，烧毁。</p>

<p>自此，四艘渔船，合计31名男人抵达了安纳塔汉岛。他们中过半数二十多岁，最年轻的人16岁。在这31人中，10人是军人，21人是从属于军队的船员。</p>

<p>失去了返程船的他们，别无他法，只能选择在岛上开始生活。在岛上走走之后发现，岛内生长着天然的香蕉和番木瓜。并且还有野芋，作为食物充饥似乎是没问题了。</p>

<p>一开始他们按照所属船只的不同分群生活着，之后慢慢的共同生活到了一起。</p>

<p>漂到小岛上来的男人们马上和和子还有中里相逢了。无论和子还是中里，都很高兴可以见到远到而来的日本国人，他们把自己的食量分给他们，并且也治疗了他们的伤势。</p>

<p>然而，原本只有47人的小岛增加了31人。食量不足是很容易就可以预见的事情。虽然他们用随着他们一起飘来的美国制造的金属大圆筒接水，来保证饮用水的供给，但是和预见的一样，猪和鸡吃完了之后，食物不足便开始成为了令人困扰的大问题。</p>

<p>他们开始在海上捕鱼，栽培水果，捕捉蝙蝠，蜥蜴，老鼠，椰子蟹（见下图）吃。开始了为了活下去的战斗。</p>

<p><img src="http://ww5.tiki.ne.jp/~qyoshida/jikenbo/064-yashigani.jpg" alt="maps" /></p>

<p>食物确保终于走上了正轨，并且从原住民那里学习了以椰子的树液为原料的酿酒方法，大家也慢慢能喝上了酒，伙食问题终于得到了解决。</p>

<p>然而，虽然食物总算够了，但是有些其它的东西，却是无论如何都不够的。没有件像样的衣服，和子穿着树皮做的短蓑衣裸露着上半身，其他的男人就只穿着随着他们一起飘来的破烂衣服，或者有的人就干脆用树叶只把隐私部位挡住而已。</p>

<p>昭和20年（1945年）8月，战争以日本战败的结局得到了终结。然而，在岛上幸存下来的他们却并不知道这件事。</p>

<p>有美军再三去岛上告诉他们战争结束的事情，但是在岛上的人却无一人相信美军的话。美军还曾试图像他们投放劝降的宣传单，但却没有一人去捡过那些东西。</p>

<p>之后所有原住民都从非日本领土的小岛上逃了出去，自此，小岛上残存的，就只剩下日本人了。</p>

<p>这个岛上还剩下的女性，只有比加和子1人。而男人有32个。</p>

<p>当然，围绕着女人展开的纷争是每个人都可以预料到的。所以，飘过来的人中，最年长的人提议，让在岛上原本住着的和子和中里在大家的面前赶快举行婚事，这样的话就可以让大家都对和子死心了，他觉得，这样也可以防止此后会发生的纷争了吧。</p>

<p>之后，和子和中里在岛上完成了他们的婚事，两个人也在远离大家的地方住了起来。</p>

<p>入手手枪的2人
昭和21年8月，他们在山中发现了坠落了的美军B29战斗机的残骸。残骸中有6个降落伞，还有罐头等等可以改善生活的东西。
和子把降落伞的布带回去后，开始着手制作自己的衣服和裙子，并且也尽可能地给别人做了些衣服。终于在某种程度上让人看上去像样点了。
而正在这时！离事故现场稍微有些距离的另一块地方，男人们发现了4把小手枪和实弹70枚！
枪其实全坏了，根本不能用。但是很懂枪的一个男人修啊修，居然修好了两把！之后，修枪的人以及他的死党一人拿了一把。
这两个人拿着枪就开始装逼了啊，之后在男人们中的地位就蹭蹭蹭往上升，最终得到了群体中的绝对权力。
说时迟那时快，两个人仗着有小手枪，稍微威迫一下，就把和子给睡了。虽然和子还是有！老！公！但是他们不！在！乎！ 和子就开始了和3个男人共同的夫妻生活！</p>

<p>从那之后过了没多久，发生了一件非常可疑的事件。一个男人从树上掉下来摔死了。而那时，离现场很近的，正是拥有手枪的2人。而这个摔死的家伙，正是平时和这2人关系不好的人。</p>

<p>岛内开始慢慢地弥漫着一股异样的气氛。【是不是那两个人拿着枪威胁他跳树，并且伪造成的跳树死？】</p>

<p>虽然没有证据，但是个人都会这么想啊！大家就开始猜忌了！</p>

<p>几个月后，拿着枪的男人之一，干掉了一个老是纠缠和子的男人。</p>

<p>岛上的杀人事件拉开了序幕。</p>

<p>两人持续着他们的老大地位，翌年的昭和22年，这两人之间开始产生了不和。有一天他们两个人在喝酒，喝啊喝得就吵起来了，一个人说“两三天后，我去帮你把B杀了！”</p>

<p>然而，说着这话的人，却反遭射杀。</p>

<p>这两人闹矛盾的原因是因为那个女人和子。之后，和子的正式老公怕自己也配干掉，就把和子拱手相让给杀了人的那个男的。那家伙把另外的一把枪也拿到手之后，就成为了绝对主宰。一个人霸占了和子，开始过上了小夫妻生活。</p>

<p>但是，就算这个支配者也，在那之后不久，有天晚上钓鱼时，掉进海里淹死了。到底是意外还是他杀，到最后都不得而知。</p>

<p>最初得到枪的两人都相继死去。之后那两把枪，到了中里，和名为岩井的人的手中。</p>

<p>这下是中里，岩井，和子三人开始了同居生活。然后在群体中，大家就产生了一个这样的共识“有枪有女人，谁有枪谁就能去睡和子”（真是至理名言）</p>

<p>但是这样的生活也没持续多长时间。一个月后，岩井把中里射杀了。岩井拿了中里的枪，摆出了一副现在我才是老大的样子。与和子结婚了。</p>

<p>然而两年后，岩井被射杀了。（这个持续得比较长）</p>

<p>围绕着枪，不断产生着纷争的小岛上。从悬崖上掉落摔死的，吃东西中毒死的，忽然失踪不见了的男人开始接连出现。</p>

<p>到此，一共死了9个人。虽然可能其中是有人真的是意外或者病死的。但是显而易见，大部分人都是因遭到了射杀而死的。如果这样放任不管，互相之间的杀戮将会继续持续下去。</p>

<p>这样的状况下，如果不做点什么的话就难办了啊！这时候，之前那个年纪最大的男人又站出来想出了个提案！</p>

<p>让和子正式和一个人结婚，让他和那个人好好过日子。其他的人都不许再去染指他们的丝毫生活。并且，把引起杀戮的元凶，那两把小手枪，扔到海里！</p>

<p>虽说幸好最后拿到枪的岩井在死了以后，并没有再次出现另一个老大。但如果就这么把枪留着，肯定会之后再出现危及大家生命的人物啊。</p>

<p>所以岛上的男人，就让和子自己选一个喜欢的男的，在众人面前举行婚礼。枪就被扔到海里了。</p>

<p>这件事，对小岛来说，应该是一个转折点。从那以后，大家都觉得小岛会和平下去了，但谁知道现状根本就没什么改变啊。之后又有4个人，不是失踪就是死了。</p>

<p>从最初的杀人事件开始，已经过了5年。在这段时期里，32个男人中，只留下了19个人。</p>

<p>即使和子正式成婚了，即使枪也被扔掉了。围绕着和子展开的互相残杀仍旧持续着。</p>

<p>【到底怎样才能停止这样的杀戮呢】</p>

<p>男人们聚在一起开了个研讨会。得出的结论是，【把那个女人处决掉】。杀人事件的缘由，都是因为这个女人啊！</p>

<p>全员同意，明天就把和子杀了。</p>

<p>但是，那天晚上，有一个男人夜访和子家中。把这件事告诉了和子。【快逃，不然你就要被杀了!】</p>

<p>下图分别是生还者和和子。</p>

<p><img src="http://ww5.tiki.ne.jp/~qyoshida/jikenbo/064-seikansya.jpg" alt="maps" /></p>

<p><img src="http://ww5.tiki.ne.jp/~qyoshida/jikenbo/064-kazuko.jpg" alt="maps" /></p>

<p>知道了男人们的想法的和子立刻离开了家中，潜入丛林。在丛林里开始了野营的生活。一个女人在这样的状况下，夜间没有照明设备，食物也只有自己勉强解决。但也因为如此，不会被男人们发现。</p>

<p>然后，在如此艰辛的逃亡生活持续了33天后的1950年6月，和子发现了在海面上的美国船只。她便迅速爬到树上，挥舞降落伞的布，并且通过大喊来引起注意。终于获得了援救。</p>

<p>船只在靠近时，那些岛上的男人因为仍旧觉得战争并没有结束，所以就藏了起来。然后和子也顺利的获得了美国人的救助。</p>

<p>在孤岛上生活的六年间，被杀的，失踪的总人数达到了13人。</p>

<p>和子在那之后，被送到塞班岛过了一个月，在太平洋西部的关岛（美军基地）滞留了一个月后终于回到了日本。得到援救的和子把在岛上发生的种种事情，以及那些岛上的人的名字，他们的原住所，尽可能详细地说了出来。</p>

<p>立即，他们的父母，兄弟，妻子得到了通知。岛上的那些男人，你们的老公，儿子，还不相信战争结束了啊。之后，他们各自的父母妻子，总共写了200封以上的信，以及搞了很多日本的报纸拿到了小岛上。美军也号召他们赶快从小岛上滚出来。</p>

<p>但虽说如此，岛上留下的男人仍然觉得这只是美军的陷阱而已，仍然没有相信战败的事实。</p>

<p>从和子离开小岛的一年后的昭和26年6月9日，男人中的一人，终于接受了号召，投降了。从自己家寄来的信中，妻子亲手做的东西，使得这个男人完全相信了现实。这个男人也得到了美国的援救，并且通过喇叭，劝说还留在岛上的男人们。</p>

<p>6月26日，按照这个男人的号召，终于岛上的男人们都接受了战败的现实，全员投降，并且得到了救助。先被送到了关岛的美军基地，之后都陆续回到了日本。</p>

<p>昭和26年7月26日，在羽田机场降落的他们，都在那个时候哭泣了。</p>

<p>媒体大肆对这事进行了报道。羽田机场也来了很多，为了看他们一眼的人们。在小岛上存活下来的男人们，之前都被人们认为战死了，而且也都被举行过葬礼。</p>

<p>奇迹般的生还，媒体并且报道了他们很多人拿着自己的遗像的场面。</p>

<p>而和子最先的原配丈夫，那个自从离开小岛后就渺无音讯的正一同学，早就回了国，以为和子死了，就在冲绳和别的女人结婚了。</p>

<p>并且，从安纳塔汉岛回来的那些男人之前的妻子，也都是有的和别人结婚了，有的有其他情人。</p>

<p>在这之中，有的女人甚至和自己的弟弟结婚，并生下了孩子。经过商谈，妻子仍旧回归从小岛上回来的男人所属，而和弟弟生的孩子，就作为养子抚养下去。</p>

<p>这之后，那些男人被之前的其他成员问道，【其他人去哪里了】他们就编造了各种在事故中死去的谎言。但是因为他们没有事先串通，所以证供有很大出入。最终他们抖出了，因为一个女人展开互相残杀的真相。</p>

<p>这件事之后也被大肆报道，报纸，杂志，把和子称做【安纳塔汉岛女王】【拥有32个面首的女人】【蜂王】【兽欲和奴隶】【魅惑男人的女人】等等。</p>

<p>在这之中，虽然也有些报道上说，同情了和子的故事，并且也为和子做了为了生存别无他法的开脱。但是大多数的报道，都在中伤和子，批判和子。并且把这整个事件，写成为了引起注意不顾事实的故事。</p>

<p>人们在那时，把目光都集中到了和子一个人身上，和子的肖像写真得到了爆发般的大卖。日本刮起了一股安纳塔汉岛热，很长一段事件，这个故事都成为了人们津津乐道的话题。</p>

<p>之后和子被人动员搞个舞台剧，于是和子便主演了名为【安纳塔汉岛】的戏剧。1952年开始的两年间，在日本全国进行了巡演。（碉堡了这才是当之无愧的女王）</p>

<p>并且又制作了一部由和子主演的名为【这就是安纳塔汉岛的真相！】的电影。同时，好莱坞的导演斯登堡也完成了电影【安纳塔汉岛】。此时的和子成为了当时的风云人物。</p>

<p>可是，哪怕和子成为再有名的人，也并没有洗刷掉她身上背负的负面印象。</p>

<p>总是会有报道说她对男人进行诓骗，并且是招来连续杀戮的罪魁祸首。她在戏剧的巡回演出结束之后在冲绳开了一家【安纳塔汉岛咖啡店】，但因为哪怕在冲绳总是有如此一般的报道上报，她感觉难以在那里继续生活下去，便仍旧搬到了原来的地方生活。</p>

<p>在东京做了一段时间脱衣舞舞女（这个单词我翻译的时候还没看懂是什么呢）之后，又回到了冲绳，34岁的她获得了新的婚姻。和新的丈夫一起，开了一个贩卖章鱼烧和沙冰的小店，生意倒还不错，终于宁静平和的生活再次来到了她的身上。和子在四十多岁的时候，丈夫去世，她自己也在49岁的时候因为脑瘤离开了人世，结束了她波澜的一生。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[乙肝五项指标]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/05/Second-liver-5-indexes/"/>
    <updated>2013-07-05T23:41:59+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/05/Second-liver-5-indexes</id>
    <content type="html"><![CDATA[<p>乙型肝炎病毒表面抗原      HBsAg	    阴性<br />
乙型肝炎病毒表面抗体      HBsAb	    阳性<br />
乙型肝炎病毒e抗原         HBeAg	    阴性<br />
乙型肝炎病毒e抗体         HBeAb	    阴性<br />
乙型肝炎病毒核心抗体      HBcAb	    阴性  </p>

<p>最好的结果是阴、阳、阴、阴、阴，表示未携带乙肝病毒，并且有乙肝疫苗抗体。</p>

<!--more-->

<p>如果五项全是阴，表示未携带乙肝病毒，但是未有乙肝疫苗抗体，需要注射乙肝疫苗抗体。<br />
其他“小三阳”和“大三阳”自行搜索吧。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中国社会现状及未来发展]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/04/china-society/"/>
    <updated>2013-07-04T07:10:53+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/04/china-society</id>
    <content type="html"><![CDATA[<p><a href="http://cn.nytimes.com/china/20130703/cc03fangshaowei/">方绍伟：中国政治模式能走多远？</a></p>

<p><a href="http://cn.nytimes.com/china/20130624/cc24lifan1/">李凡（上）：为什么现在的意识形态变得比较左</a><br />
<a href="http://cn.nytimes.com/china/20130625/cc25lifan2/">李凡（下）：中国转型能否避免崩溃一途?</a></p>

<!--more-->

<script src="http://xixitalk.github.com/javascripts/base64.js" type="text/javascript"> </script>
<p><span id="base64_block">RFFveExpRGt1SzNsbTczbWxML21zcnZtcUtIbHZJL29nNzNvdGJEbHBKcm92NXp2dko4OFFsSStEUXJrdTQ0eU1EQXk1Ym0wNWJ5QTVhZUw3N3lNNUxpdDVadTk1Nkd1NWE2ZTVZZTY1NDZ3NUxxRzVMaUE1TGlxNXBhdzU1cUU1cFMvNXJLNzVxaWg1YnlQNzd5TTZMK1o1YkN4NXBpdjVMaU41WkNNNUxxTzVMdWw1YjZBNTd1STZMcXI1TGlBNVlXYTVZaTI1NXFFNG9DYzZabVE1THU3NUxpQTVZV2E1WWkyNG9DZDVxaWg1YnlQNG9DVTRvQ1U1WnlvNUxpQTVZV2E1TGlUNXBTLzU1cUU1WW1ONW8rUTVMaUw3N3lNNVkrcTVZV0I2SzY0NXB5QTZhdVk2YUtHNWErODVMcTY1WnlvNUx1NzVMaWs1YkdLNTVxRTVwUy81cks3NXFpaDVieVA0NENDNUxpTjZLYUI1TDJPNUx5dzZMK1o1NmVONXBTLzVySzc1cWloNWJ5UDU1cUU1WWliNXBhdzU0bTU1b0NuNVpLTTU1U2Y1Wkc5NVlxYjQ0Q0M1Ynk2NUxxNjVwUy81cks3NTVxRTVwZTI1THVqNVkrdjZJTzk2TCtINVk2NzVMcUdMT0tBbk9XNHVPUzZ1dWFVditheXUrS0FuZVdQcitpRHZlUzhtdVM1b09TN3BlUzR1dVc0dU9TNmh1T0FndWVPc09XY3FPYVlyK0tBbk9TNGcrbSttZWF5dSthd3RPS0FuZU9BZ3VLQW5PYU9xT2loak9XNGd1V2N1dUtBbmVhWXIrV0ZtdWltZ2VtU3NlKzhqT0tBbk9tYWtPVzlvdVM0bHVpaXJlS0FuZWFZcitXRm11aW1nZVdSdmVPQWd1V0ZtdWFkZythdmxPVzdpZWEwZ2VhYnRPbUhqZWltZ2UrOGpPV091K2VKdWVhZGcrV01sdWFZcittZHFlaUhxdVczc2VlYWhPV1J2ZVM0amVXUHIraUR2ZVdIdXVlT3NPZWFoT1M2aSthRGhlT0FnZzBLRFFvOGNENDhMM0ErRFFveUxpRGt1THJrdTREa3VZam5qckRsbktqbm1vVG1oSS9vcjRibHZhTG1nSUhsajVqbHZwZm1yNVRvdm9QbHQ2WWdQRUpTUGcwSzU2Uys1THlhNXJDUjVMeVg1NXFFNW9TUDZLK0c1cStVNkw2RDViZW03N3lNNXJDUjVMeVg1NXFFNlp1RzVMMlQ2SzZ3NWIrRzVwaXY1cStiNXBlMjVMdWo0NENDNXErYjVwZTI1THVqNUxxNjVMcTY2WU85NXB5SjViZWw1TDJjNzd5TTVyS2g1THVBNUxtSTZMU3I1YStNNWJldTZMZWQ3N3lNNWJlbDVMcTY2WmkyNTdxbjVwaXY2YUtHNWErODZaaTI1N3FuNzd5TTVibXk2WU9vNXJLaDVweUo2WnFQNUw2LzVvbVQ1THE2NDRDQzVMaWM1cXluNVlXeDVMcW41TGk3NUxtSjU2QzA1THFuNkwyczVaNkw1cGl2NXJDUjVMeVg1cHlKNG9DYzZJZXE1NVN4NXJDUjVMaTc0b0NkNTVxRTZadUc1TDJUNks2dzViK0c3N3lNNWIyVDVZV3g1THFuNUxpNzVMbUo1WktNNkl1UDZJR1U1cWloNWJ5UDVZZTY1NDZ3NlpldTZhS1k1NXFFNXBlMjVZQ1o3N3lNNXJDUjVMeVg1bytRNVllNjViNkE2SWVxNTVTeDVyQ1I1TGk3Nkwyczc3eU01TGl0NVp1OTVyS2g1cHlKNkwrWjU2ZU42WnVHNUwyVDZLNnc1YitHNDRDQzVMaXQ1WnU5NXJDUjVMeVg1YSs1NG9DYzZJZXE1NVN4NXJDUjVMaTc0b0NkNUxpTjU2R3U1YTZhNzd5TTVhKzU1TGlONTZHdTVhNmE1NXFFNUxpYzZLVy81YkN4NUx5YTViNlg1WWU2NkwrWjVxQzM1N3VUNks2Njc3eWE1TGl0NVp1OTVwQ2U2SWVxNTVTeDVyQ1I1TGk3NUx5YTVwdTA1TG14NDRDQzVZV2E1WktNNXBTLzVicWM1TG1mNmFHNjVZcS82TCtaNXFDMzVhNmo1THlnNDRDQzVMaXQ1WnU5NXJLaDVweUo1WStONWErNTVZV2E3N3lNNWIyVDVZV2E1WktNNXBTLzVicWM1cFMvNTYyVzVwMis1NXFFNXBlMjVZQ1o3N3lNNUxpTjVMeWE1THFKNVkrVzVwUy81cks3NXAyRDVZaXA3N3lNNklDTTVwaXY1N3UwNXAyRDVMaSs1NG1NNlplNTVMcUw3N3lNNllDZzVvaVE1NXFFNTd1VDVwNmM1YkN4NXBpdjVwUy81NjJXNVkrSTU3U241YnlnNkxXMzVwMmw0NENDRFFvTkNqeHdQand2Y0Q0TkNqTXVJT1M0cmVXYnZlaTlyT1dlaStpRHZlV1FwdW1CditXRmplVzBxZWE2ZytTNGdPbUFsRDhnUEVKU1BnMEs1TGl0NVp1OTVyS2g1cHlKNVkrTjVhKzU1WVdhNzd5TTVyS2g1cHlKNktpQTZLNjY2SWVxNTVTeDc3eU02TCtZNXBpdjVwNkI1cDJENUxpNzVMbUo3N3lNNkwrWTVMaU41cGl2NWFpQjVwMkQ1TGk3NUxtSjQ0Q0M1TGl0NVp1OTVZK3E1cHlKNUxpazU2ZU41N3VUNXA2Yzc3eWE2TDJzNVo2TDVvaVE1WXFmNW9pVzZJQ0Y1YlNwNXJxRDQ0Q0M1TGl0NVp1OTU1cUU1WWU2NkxldjVZK3E2SU85NXBpdjViU3A1cnFENzd5TTU2Uys1THlhNUxpNzVMbUo1WnU5NWE2MjVyS2g1cHlKNW9pUTVZcWY2TDJzNVo2TDU1cUU1WVdJNUw2TDQ0Q0NEUW89</span> <script type="text/javascript"> var line_name = 'base64_block';var content = document.getElementById(line_name).innerHTML;document.getElementById(line_name).innerHTML=Base64.decode(Base64.decode(content));</script></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用base64进行关键词编码]]></title>
    <link href="http://xixitalk.github.com/blog/2013/07/03/base64-encode/"/>
    <updated>2013-07-03T06:01:04+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/07/03/base64-encode</id>
    <content type="html"><![CDATA[<p>用base64对关键词进行两次编码，浏览器客户端用javascript进行两次解码。对于支持javascript的浏览器来说透明，目的是防止关键词过滤。</p>

<!--more-->

<p>如(查看网页源代码)</p>

<script src="http://xixitalk.github.com/javascripts/base64.js" type="text/javascript"> </script>
<p><span id="base64_block">RFFwSFJsY2c1ckNSNUxpN0lPaUhxdWVVc1NEb2c2SHBsS2JtdHBzZzVyR2Y1ck85NXJDUklBMEs=</span> <script type="text/javascript"> var line_name = 'base64_block';var content = document.getElementById(line_name).innerHTML;document.getElementById(line_name).innerHTML=Base64.decode(Base64.decode(content));</script></p>

<h3 id="base64blockrb">base64_block.rb</h3>
<p>把<a href="https://gist.github.com/xixitalk/5927023">https://gist.github.com/xixitalk/5927023</a>代码保存为base64_block.rb，放到<code>octopress\plugins</code>目录。</p>

<h3 id="base64js">base64.js</h3>
<p>把<a href="https://github.com/xixitalk/xixitalk.github.com/blob/source/source/javascripts/base64.js">https://github.com/xixitalk/xixitalk.github.com/blob/source/source/javascripts/base64.js</a>保存为base64.js，放到<code>octopress\source\javascripts</code>目录。</p>

<h3 id="base64block">使用base64_block使用</h3>
<p>使用<code>base64_block</code>和<code>endbase64_block</code>包含需要编码的段落。详细参看<code>base64_block.rb</code>文件前部的注释说明。注意：一篇文章里只能有一个<code>base64_block</code>块。</p>

<pre><code>{% base64_block %}
这些信息会被编码
{% endbase64_block %}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[达尔文奖]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/27/death-for-sesame/"/>
    <updated>2013-06-27T18:59:21+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/27/death-for-sesame</id>
    <content type="html"><![CDATA[<p>新闻来源<a href="http://news.xinhuanet.com/legal/2013-06/27/c_124918715.htm">http://news.xinhuanet.com/legal/2013-06/27/c_124918715.htm</a></p>

<p>女儿手机掉粪坑，下粪坑捞手机被毒倒，父母赶到也被毒倒。</p>

<!--more-->

<p>无独有偶，<a href="http://csxb.bandao.cn/data/20120917/html/32/content_6.html">北爱尔兰也发生过一条宠物狗掉粪坑，一家四口为救它死了仨</a>，幸存那个人也因吸入大量的粪便和沼气，肺部、食管、呼吸道等器官受损严重。</p>

<p><a href="http://www.darwinawards.com/">达尔文奖</a>奖给那些“让自己愚蠢的基因不再自由地传播出去”，对人类的进化做出了贡献了的人们。维基百科：<a href="https://zh.wikipedia.org/wiki/%E8%BE%BE%E5%B0%94%E6%96%87%E5%A5%96">达尔文奖</a>。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[西奥克兰发生一起自杀溺亡]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/26/West-Auckland-drowning-not-suspicious/"/>
    <updated>2013-06-26T00:57:00+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/26/West-Auckland-drowning-not-suspicious</id>
    <content type="html"><![CDATA[<p>来源:<a href="http://www.3news.co.nz/West-Auckland-drowning-not-suspicious/tabid/423/articleID/302561/Default.aspx">West Auckland drowning not suspicious</a></p>

<p>Police say the death of a man found in a stream bordering the west Auckland suburbs of Henderson and Massey was not suspicious.<br />
据警方资料，在西奥克兰Henderson和Massey边界的河流里发现了一名死亡男子，自杀溺亡可能明显。</p>

<!--more-->

<p>Ranui resident Jimmy Wang Liyu, 78, drowned in the Huruhuru Stream on Friday.<br />
Jimmy Wang Liyu是Ranui居民，78岁，周五在Huruhuru河中溺亡。</p>

<p>Police say local residents were helpful in quickly reporting the incident, which allowed quick recovery of Mr Liyu’s body.<br />
据警察说，他们根据当地居民的及时报告，很快找回了Liyu先生的尸体。</p>

<p>Read More:<a href="http://www.3news.co.nz/Body-found-in-Auckland-stream/tabid/423/articleID/302335/Default.aspx">Body found in Auckland stream</a></p>

<p>Police are asking for help to identify the man<br />
警方正在向公众征求帮助用以识别该男子的身份</p>

<p>The body of a man has been found in a stream which borders the suburbs of Henderson and Massey in west Auckland.<br />
西奥克兰Henderson和Massey边界的河流里发现了一名死亡男子。</p>

<p>Police were called to Huruhuru Stream, Henderson about 4pm today.<br />
今天下午4点警方接到Henderson Huruhuru河流地区的报警。</p>

<p>They are asking for help to identify the man who is described as Asian, approximately 60 years old and of medium build.<br />
该名亚裔男子，60岁左右，中等身材。警方正在为了确认他身份征求公众的帮助。</p>

<p>He was wearing a brown jumper, jeans and white New Balance sports shoes.<br />
他身穿棕色卫衣，牛仔裤和白色New Balance运动鞋。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[树莓派nf_conntrack错误]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/25/nf_conntrack-error/"/>
    <updated>2013-06-25T16:57:52+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/25/nf_conntrack-error</id>
    <content type="html"><![CDATA[<p>最近我的树莓派出现大量的重启，特别是看电影+下bt的时候，并且<a href="http://www.thekelleys.org.uk/dnsmasq/doc.html">Dnsmasq</a>也经常退出，在<code>/var/log/syslog</code>和<code>/var/log/messages</code>出现大量的nf_conntrack错误。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> raspbmc kernel: nf_conntrack: table full, dropping packet
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<p>先试试下面这种方法能不能解决问题，默认<code>nf_conntrack_max</code>是7xxx，树莓派的内存不大，暂时设置<code>20000</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo sysctl -w "net.netfilter.nf_conntrack_max=20000"
</span><span class="line">sudo sysctl -w "net.netfilter.nf_conntrack_tcp_timeout_established=600"
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>参考：</p>

<p><a href="http://www.wendangz.com/idc/linux/967.html">http://www.wendangz.com/idc/linux/967.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[穆斯林禁食猪肉常见问答]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/23/PORK-FORBIDDEN/"/>
    <updated>2013-06-23T15:42:11+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/23/PORK-FORBIDDEN</id>
    <content type="html"><![CDATA[<p>第一个信息来源 <a href="http://www.irf.net/index.php?option=com_content&amp;view=article&amp;id=394%3Apork-forbidden&amp;catid=71%3Amost-common-questions-asked-by-non-muslim&amp;Itemid=199">FAQs Most Common Questions asked by Non Muslims：PORK FORBIDDEN</a></p>

<p>第二个信息来源 <a href="http://www.islamicvoice.com/february.99/zakir.htm">Questions Commonly Asked by Non-Muslims - VI : Why is Pork Forbidden?</a>,和第一个信息地址的内容大部分相同，比第一个信息更正式一些。</p>

<p>说明：下面是穆斯林向非穆斯林说明他们不吃猪肉的几点原因。这里尊重宗教信仰自由，转载此处并无冒犯之意，原因说明本意以英文为准，翻译不准确的地方请留言。作者是<a href="http://www.irf.net/index.php?option=com_content&amp;view=article&amp;id=22&amp;Itemid=54">Dr. Zakir Naik</a>，他是<a href="http://www.irf.net/">Islamic Research Foundation</a>的President。</p>

<p>PORK FORBIDDEN<br />
禁食猪肉</p>

<p>Question:
Why is the eating of pork forbidden in Islam?<br />
问：为什么穆斯林禁止食用猪肉？</p>

<p>Answer:
The fact that consumption of pork is prohibited in Islam is well-known. The following points explain various aspects of this prohibition:<br />
答：大家都知道穆斯林禁食猪肉，下面将阐述这个习惯的几点原因。</p>

<!--more-->

<h3 id="pork-prohibited-in-the-quran">1. Pork prohibited in the Qur’an</h3>

<h3 id="section">1. 《古兰经》里禁食猪肉</h3>
<p>The Qur’an prohibits the consumption of pork in no less than four different places. It is prohibited in 2:173, 5:3, 6:145 and 16:115.</p>

<p>“Forbidden to you (for food) are: dead meat, blood, the flesh of swine, and that on which hath been invoked the name of other than Allah.”</p>

<p>[Al Qur’an 5:3]</p>

<p>The above verses of the Glorious Qur’an are sufficient to satisfy a Muslim as to why pork is forbidden.</p>

<h3 id="pork-prohibited-in-the-bible">2. Pork prohibited in the Bible</h3>

<h3 id="section-1">2. 《圣经》里禁食猪肉</h3>
<p>The Christian is likely to be convinced by his religious scriptures. The Bible prohibits the consumption of pork, in the Book of Leviticus:</p>

<p>“And the swine, though he divide the hoof, and be cloven footed, yet he cheweth not the cud; he is unclean to you.”</p>

<p>“Of their flesh shall ye not eat, and their carcase shall ye not touch, they are unclean to you.”</p>

<p>[Book of Leviticus 11:7-8]</p>

<p>Pork is also prohibited in the Bible in the Book of Deuteronomy:</p>

<p>“And the swine, because it divideth the hoof, yet cheweth not the cud, it is unclean unto you. Ye shall not eat of their flesh, nor touch their dead carcase.”</p>

<p>[Book of Deuteronomy 14:8]</p>

<p>A similar prohibition is repeated in the Bible in the Book of Isaiah Chapter 65 Verses 2-5.</p>

<h3 id="consumption-of-pork-causes-several-diseases">3. Consumption of pork causes several diseases</h3>

<h3 id="section-2">3. 食用猪肉会造成几种疾病</h3>
<p>The other non-Muslims and atheists will agree only if convinced through reason, logic and science. Eating of pork can cause no less than seventy different types of diseases. A person can have various helminths like roundworm, pinworm, hookworm, etc. One of the most dangerous is Taenia Solium, which is in lay man’s terminology called tapeworm. It harbours in the intestine and is very long. Its ova i.e. eggs, enter the blood stream and can reach almost all the organs of the body. If it enters the brain it can cause memory loss. If it enters the heart it can cause heart attack, if it enters the eye it can cause blindness, if it enters the liver it can cause liver damage. It can damage almost all the organs of the body.</p>

<p>Another dangerous helminthes is Trichuris trichiura. A common misconception about pork is that if it is cooked well, these ova die. In a research project undertaken in America, it was found that out of twenty-four people suffering from Trichuris trichiura, twenty-two had cooked the pork very well. This indicates that the ova present in the pork do not die under normal cooking temperature.</p>

<h3 id="pork-has-fat-building-material">4. Pork has fat building material</h3>

<h3 id="section-3">4. 猪肉富含脂肪</h3>
<p>Pork has very little muscle building material and contains excess of fat. This fat gets deposited in the vessels and can cause hypertension and heart attack. It is not surprising that over 50 million Americans suffer from hypertension.</p>

<h3 id="pig-is-one-of-the-filthiest-animals-on-earth">5. Pig is one of the filthiest animals on earth</h3>

<h3 id="section-4">5. 猪是地球上最污秽的动物之一</h3>
<p>The pig is one of the filthiest animals on earth. It lives and thrives on muck, faeces and dirt. It is the best scavenger that I know that God has produced. In the villages they don’t have modern toilets and the villagers excrete in the open air. Very often excreta is cleared by pigs.</p>

<p>Some may argue that in advanced countries like Australia, pigs are bred in very clean and hygienic conditions. Even in these hygienic conditions the pigs are kept together in sties. No matter how hard you try to keep them clean they are filthy by nature. They eat and enjoy their own as well as their neighbour’s excreta.</p>

<h3 id="pig-is-the-most-shameless-animal">6. Pig is the most shameless animal</h3>

<h3 id="section-5">6. 猪是最没有廉耻的动物</h3>
<p>The pig is the most shameless animal on the face of the earth. It is the only animal that invites its friends to have sex with its mate. In America, most people consume pork. Many times after dance parties, they have swapping of wives; i.e. many say “you sleep with my wife and I will sleep with your wife”. If you eat pigs then you behave like pigs. We Indians look upon America to be very advanced and sophisticated. Whatever they do, we follow after a few years. According to an article in Island magazine, this practice of swapping wives has become common in the affluent circles of Mumbai.</p>

<p>猪是地球上最没有廉耻的动物，它们是唯一一种会邀请朋友和自己配偶进行交媾的动物。在美国，大部分人食用猪肉。舞会之后，他们经常相互交换妻子。比如，很多人会这样说”你和我的妻子睡觉，我和你的妻子睡觉”。如果你食用猪肉，你的行为就会变成猪一样。我们印度人眼中认为美国很高级很厉害。如果他们做什么，我们也跟着效仿，不出几年，根据Island magazine的一篇文章，换妻就会在孟买的富人圈里很普遍。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搭建局域网跨路由网络]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/22/routing-cross/"/>
    <updated>2013-06-22T17:34:57+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/22/routing-cross</id>
    <content type="html"><![CDATA[<p>场景：两个路由器每个都组建一个局域网，每个局域网里的电脑想访问另一个局域网的电脑。</p>

<!--more-->

<p><a href="http://www.flickr.com/photos/xixitalk/9108420474/"><img src="http://farm6.static.flickr.com/5544/9108420474_421bdc9dc4_b.jpg" title="跨路由器访问设置" /></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[世界卫生组织（WHO）对转基因技术的看法]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/21/WHO-Transgene/"/>
    <updated>2013-06-21T19:23:57+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/21/WHO-Transgene</id>
    <content type="html"><![CDATA[<p>世界卫生组织（WHO）2005年的生物技术报告 <a href="http://www.who.int/foodsafety/fs_management/No_04_Biotech_Jun05_ch.pdf">http://www.who.int/foodsafety/fs_management/No_04_Biotech_Jun05_ch.pdf</a></p>

<ol>
  <li>该报告认为，转基因食品的发展可直接或间接有助于增进人类健康和发展。</li>
  <li>该报告还认为，转基因食品如果在投放市场之前没有进行适当评估，可能会对人类健康和环境产生潜在风险。</li>
  <li>现有转基因食品已通过风险评估，不太可能对人类健康带来风险，而且此类食品的消费尚未造成不利后果。</li>
  <li>今后，现代技术如将确实改进食品生产方式，应通过广泛的评价予以评估，包括评估对人类健康和环境的风险和利益以及社会和伦理问题。</li>
</ol>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress加快rake generate速度]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/20/Octopress-Rake-gen_deploy/"/>
    <updated>2013-06-20T05:35:54+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/20/Octopress-Rake-gen_deploy</id>
    <content type="html"><![CDATA[<p>octopress随着文件越来越多，<code>rake generate</code>越来越慢。这样可以加快速度。</p>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rake isolate[new post filename]
</span><span class="line">rake preview
</span><span class="line">rake integrate
</span><span class="line">rake gen_deploy
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>rake isolate</code>进行隔离，<code>rake integrate</code>进行隔离还原，<code>rake gen_deploy</code>进行生成和发布。</p>

<p>不过这个加快只是能够节省preview的时间而已，早点让你看到新博客的预览页面,并没有节省<code>rake generate &amp;&amp; rake deploy</code>一起的时间。</p>

<p>参考：</p>

<ol>
  <li>Some Octopress Rake Tips <a href="http://robdodson.me/blog/2012/06/11/some-octopress-rake-tips/">http://robdodson.me/blog/2012/06/11/some-octopress-rake-tips/</a></li>
  <li>縮短重新產生文章的時間 <a href="http://blog.eddie.com.tw/2011/10/30/speed-up-octopress-post-regeneration/">http://blog.eddie.com.tw/2011/10/30/speed-up-octopress-post-regeneration/</a></li>
  <li>加快generate的速度 <a href="http://blog.kent-chiu.com/blog/2013/03/04/octopress-configuration/">http://blog.kent-chiu.com/blog/2013/03/04/octopress-configuration/</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从已经存在的octopress新建环境]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/20/clone-from-exist-octopress/"/>
    <updated>2013-06-20T02:45:41+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/20/clone-from-exist-octopress</id>
    <content type="html"><![CDATA[<p>场景需求：为已经存在的octopress博客在另一个目录或者主机新建一个octopress发布环境</p>

<h3 id="sourcemaster">获得source和master分支代码</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git clone -b source git@github.com:xixitalk/xixitalk.github.com.git octopress
</span><span class="line">$ cd octopress
</span><span class="line">$ git clone git@github.com:xixitalk/xixitalk.github.com.git _deploy 
</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<p>如果更改了Gemfile内容，用<code>bundle install</code>更新安装</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">bundle install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>参考：</p>

<p>Clone Your Octopress to Blog From Two Places <a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dnsmasq上分发WPAD]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/WPAD-with-DNS-on-Dnsmasq/"/>
    <updated>2013-06-19T22:34:04+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/WPAD-with-DNS-on-Dnsmasq</id>
    <content type="html"><![CDATA[<p><a href="http://en.wikipedia.org/wiki/Web_Proxy_Autodiscovery_Protocol">WPAD</a>全称是Web Proxy Auto-Discovery，可以通过DHCP或者DNS进行代理分发，这样局域网里客户端连接上后自动进行代理。</p>

<p><a href="http://www.thekelleys.org.uk/dnsmasq/doc.html">dnsmasq</a>为一个轻量的DNS和DHCP服务器。dnsmasq.conf配置说明<a href="http://www.thekelleys.org.uk/dnsmasq/docs/dnsmasq.conf.example">dnsmasq.conf.example</a>。</p>

<p>以下配置为资料搜集，仅供参考，我并未实践，并且在我实践过程中可能随时修改，有疑问可以交流但不要期望获得答案。</p>

<!--more-->

<h3 id="dnsmasqhdcpwpad">Dnsmasq上通过HDCP分发WPAD</h3>
<p>在dnsmasq.conf里这样配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">## dnsmasq is a combined dns and dhcp server
</span><span class="line">## 	/etc/dnsmasq.conf
</span><span class="line">dhcp-option=252,http://your.server.here/wpad.dat 
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="dnsmasqdnswpad">Dnsmasq上通过DNS分发WPAD</h3>
<p>在dnsmasq.conf里这样配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">txt-record=host.co.nz,"service:wpad:!http://wpad.host.co.nz:80/proxy.pac"
</span><span class="line">srv-host=wpad.tcp.host.co.nz,wpad.host.co.nz,80
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>参考：</p>

<ol>
  <li>Automatic Proxy Configuration  <a href="http://users.telenet.be/mydotcom/library/network/pac.htm">http://users.telenet.be/mydotcom/library/network/pac.htm</a>  </li>
  <li>[Dnsmasq-discuss] wpad and DNS <a href="http://lists.thekelleys.org.uk/pipermail/dnsmasq-discuss/2006q1/000561.html">http://lists.thekelleys.org.uk/pipermail/dnsmasq-discuss/2006q1/000561.html</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress里插入flickr的图片]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/Insert-a-Image-From-Flickr-in-Octopress/"/>
    <updated>2013-06-19T18:17:24+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/Insert-a-Image-From-Flickr-in-Octopress</id>
    <content type="html"><![CDATA[<p><a href="http://www.flickr.com">flickr</a>更新之后，免费1T空间，同时可以上传质量很好的图片。<a href="http://www.instagram.com">instagram</a>的图片质量太差了。</p>

<!--more-->

<h3 id="gemfileflickraw">Gemfile添加flickraw</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">gem 'flickraw', '~&gt; 0.9.6'
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行一次<code>bundle install</code>，确保系统里安装<code>flickraw</code></p>

<h3 id="flickrapikey">申请flickr的API的key</h3>

<p>从flickr.com申请api_key和shared_secret，略过。</p>

<h3 id="flickrimagerbplugins">添加flickr_image.rb到plugins目录</h3>

<p>示例代码</p>

<script src="https://gist.github.com/3156265.js?file=flickr_image.rb"></script>

<p>ENV[“FLICKR_KEY”]和ENV[“FLICKR_SECRET”]可以直接替换成从flickr.com申请的api_key和shared_secret字符串，避免使用环境变量。</p>

<h3 id="flickrimagerb">flickr_image.rb添加代理</h3>

<p>国内不能直接访问<code>flickr.com</code>，<code>rake generate</code>生成时执行<code>flickr_image.rb</code>会出错，所以需要设置一个代理解决。假设代理为一个HTTP代理，修改文件<code>plugins/flickr_image.rb</code>,在<code>FlickRaw.api_key</code>和<code>FlickRaw.shared_secret</code>代码行下添加如下代理。其他代理类似。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">FlickRaw.proxy = "http://192.168.1.106:8118/"
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section">实例测试</h3>

<p>代码里这样使用</p>

<pre><code>{% flickr_image 6293807068 b %}
</code></pre>

<p>更多用例：</p>

<script src="https://gist.github.com/3156265.js?file=2012-07-21-post-with-images-from-flickr.markdown_"></script>

<p><code>b</code>是指big，图片大小约为1024x768，基本可以满足博客显示。如果要更小图片，可以用<code>m</code>,表示medium。再小的用<code>sq</code>,表示square thumbnail。</p>

<p><a href="http://www.flickr.com/photos/xixitalk/6293807068/"><img src="http://farm7.static.flickr.com/6216/6293807068_038b43f12d_b.jpg" title="" /></a></p>

<h3 id="section-1">参考</h3>

<ol>
  <li>Insert a Image From Flickr in Octopress <a href="http://blog.ychuang.org/blog/2012/11/14/insert-a-image-from-flickr-in-octopress/">http://blog.ychuang.org/blog/2012/11/14/insert-a-image-from-flickr-in-octopress/</a></li>
  <li>Fetch images from Flickr to show in Octopress/Jekyll <a href="http://blog.pixarea.com/2012/07/fetch-images-from-flickr-to-show-in-octopress-slash-jekyll">http://blog.pixarea.com/2012/07/fetch-images-from-flickr-to-show-in-octopress-slash-jekyll</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grep命令手册]]></title>
    <link href="http://xixitalk.github.com/blog/2013/06/19/grep-man/"/>
    <updated>2013-06-19T01:51:43+08:00</updated>
    <id>http://xixitalk.github.com/blog/2013/06/19/grep-man</id>
    <content type="html"><![CDATA[<p>详细参看这个博文 <a href="http://blog.51yip.com/linux/1008.html">http://blog.51yip.com/linux/1008.html</a></p>

<p>GNU Grep 2.14 <a href="http://www.gnu.org/software/grep/manual/grep.html">http://www.gnu.org/software/grep/manual/grep.html</a></p>

<p>我常用grep命令是这样的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">grep -r -n -I Search_String  DIR
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>-I 跳过二进制文件<br />
-r 递归子目录<br />
-n 显示匹配的行号<br />
Search_String 寻找匹配的字符串<br />
DIR 查找的目录范围</p>

<!--more-->

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
</pre></td><td class="code"><pre><code class=""><span class="line">grep --help  
</span><span class="line">匹配模式选择:  
</span><span class="line"> -E, --extended-regexp     扩展正则表达式egrep  
</span><span class="line"> -F, --fixed-strings       一个换行符分隔的字符串的集合fgrep  
</span><span class="line"> -G, --basic-regexp        基本正则  
</span><span class="line"> -P, --perl-regexp         调用的perl正则  
</span><span class="line"> -e, --regexp=PATTERN      后面根正则模式，默认无  
</span><span class="line"> -f, --file=FILE           从文件中获得匹配模式  
</span><span class="line"> -i, --ignore-case         不区分大小写  
</span><span class="line"> -w, --word-regexp         匹配整个单词  
</span><span class="line"> -x, --line-regexp         匹配整行  
</span><span class="line"> -z, --null-data           a data line ends in 0 byte, not newline  
</span><span class="line">  
</span><span class="line">杂项:  
</span><span class="line"> -s, --no-messages         不显示错误信息  
</span><span class="line"> -v, --invert-match        显示不匹配的行  
</span><span class="line"> -V, --version             显示版本号  
</span><span class="line"> --help                    显示帮助信息  
</span><span class="line"> --mmap                use memory-mapped input if possible  
</span><span class="line">  
</span><span class="line">输入控制:  
</span><span class="line"> -m, --max-count=NUM       匹配的最大数  
</span><span class="line"> -b, --byte-offset         打印匹配行前面打印该行所在的块号码。  
</span><span class="line"> -n, --line-number         显示的加上匹配所在的行号  
</span><span class="line"> --line-buffered           刷新输出每一行  
</span><span class="line"> -H, --with-filename       当搜索多个文件时，显示匹配文件名前缀  
</span><span class="line"> -h, --no-filename         当搜索多个文件时，不显示匹配文件名前缀  
</span><span class="line"> --label=LABEL            print LABEL as filename for standard input  
</span><span class="line"> -o, --only-matching       show only the part of a line matching PATTERN  
</span><span class="line"> -q, --quiet, --silent     不显示任何东西  
</span><span class="line"> --binary-files=TYPE   assume that binary files are TYPE  
</span><span class="line"> TYPE is 'binary', 'text', or 'without-match'  
</span><span class="line"> -a, --text                匹配二进制的东西  
</span><span class="line"> -I                        不匹配二进制的东西  
</span><span class="line"> -d, --directories=ACTION  目录操作，读取，递归，跳过  
</span><span class="line"> ACTION is 'read', 'recurse', or 'skip'  
</span><span class="line"> -D, --devices=ACTION      设置对设备，FIFO,管道的操作，读取，跳过  
</span><span class="line"> ACTION is 'read' or 'skip'  
</span><span class="line"> -R, -r, --recursive       递归调用  
</span><span class="line"> --include=PATTERN     files that match PATTERN will be examined  
</span><span class="line"> --exclude=PATTERN     files that match PATTERN will be skipped.  
</span><span class="line"> --exclude-from=FILE   files that match PATTERN in FILE will be skipped.  
</span><span class="line"> -L, --files-without-match 匹配多个文件时，显示不匹配的文件名  
</span><span class="line"> -l, --files-with-matches  匹配多个文件时，显示匹配的文件名  
</span><span class="line"> -c, --count               显示匹配了多少次  
</span><span class="line"> -Z, --null                print 0 byte after FILE name  
</span><span class="line">  
</span><span class="line">文件控制:  
</span><span class="line"> -B, --before-context=NUM  打印匹配本身以及前面的几个行由NUM控制  
</span><span class="line"> -A, --after-context=NUM   打印匹配本身以及随后的几个行由NUM控制  
</span><span class="line"> -C, --context=NUM         打印匹配本身以及随后，前面的几个行由NUM控制  
</span><span class="line"> -NUM                      根-C的用法一样的  
</span><span class="line"> --color[=WHEN],  
</span><span class="line"> --colour[=WHEN]       use markers to distinguish the matching string  
</span><span class="line"> WHEN may be `always', `never' or `auto'.  
</span><span class="line"> -U, --binary              do not strip CR characters at EOL (MSDOS)  
</span><span class="line"> -u, --unix-byte-offsets   report offsets as if CRs were not there (MSDOS)  
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
</feed>
